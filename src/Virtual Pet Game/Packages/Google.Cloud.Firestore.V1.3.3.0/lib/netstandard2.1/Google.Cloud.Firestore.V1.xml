<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Google.Cloud.Firestore.V1</name>
    </assembly>
    <members>
        <member name="T:Google.Cloud.Firestore.V1.AggregationResultReflection">
            <summary>Holder for reflection information generated from google/firestore/v1/aggregation_result.proto</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.AggregationResultReflection.Descriptor">
            <summary>File descriptor for google/firestore/v1/aggregation_result.proto</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.AggregationResult">
             <summary>
             The result of a single bucket from a Firestore aggregation query.
            
             The keys of `aggregate_fields` are the same for all results in an aggregation
             query, unlike document queries which can have different fields present for
             each result.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.AggregationResult.AggregateFieldsFieldNumber">
            <summary>Field number for the "aggregate_fields" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.AggregationResult.AggregateFields">
             <summary>
             The result of the aggregation functions, ex: `COUNT(*) AS total_docs`.
            
             The key is the
             [alias][google.firestore.v1.StructuredAggregationQuery.Aggregation.alias]
             assigned to the aggregation function on input and the size of this map
             equals the number of aggregation functions in the query.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.CommonReflection">
            <summary>Holder for reflection information generated from google/firestore/v1/common.proto</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.CommonReflection.Descriptor">
            <summary>File descriptor for google/firestore/v1/common.proto</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.DocumentMask">
            <summary>
            A set of field paths on a document.
            Used to restrict a get or update operation on a document to a subset of its
            fields.
            This is different from standard field masks, as this is always scoped to a
            [Document][google.firestore.v1.Document], and takes in account the dynamic
            nature of [Value][google.firestore.v1.Value].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentMask.FieldPathsFieldNumber">
            <summary>Field number for the "field_paths" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DocumentMask.FieldPaths">
            <summary>
            The list of field paths in the mask. See
            [Document.fields][google.firestore.v1.Document.fields] for a field path
            syntax reference.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.Precondition">
            <summary>
            A precondition on a document, used for conditional operations.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Precondition.ExistsFieldNumber">
            <summary>Field number for the "exists" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Precondition.Exists">
            <summary>
            When set to `true`, the target document must exist.
            When set to `false`, the target document must not exist.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Precondition.UpdateTimeFieldNumber">
            <summary>Field number for the "update_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Precondition.UpdateTime">
            <summary>
            When set, the target document must exist and have been last updated at
            that time. Timestamp must be microsecond aligned.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.Precondition.ConditionTypeOneofCase">
            <summary>Enum of possible cases for the "condition_type" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.TransactionOptions">
            <summary>
            Options for creating a new transaction.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.TransactionOptions.ReadOnlyFieldNumber">
            <summary>Field number for the "read_only" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.TransactionOptions.ReadOnly">
            <summary>
            The transaction can only be used for read operations.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.TransactionOptions.ReadWriteFieldNumber">
            <summary>Field number for the "read_write" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.TransactionOptions.ReadWrite">
            <summary>
            The transaction can be used for both read and write operations.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.TransactionOptions.ModeOneofCase">
            <summary>Enum of possible cases for the "mode" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.TransactionOptions.Types">
            <summary>Container for nested types declared in the TransactionOptions message type.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.TransactionOptions.Types.ReadWrite">
            <summary>
            Options for a transaction that can be used to read and write documents.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.TransactionOptions.Types.ReadWrite.RetryTransactionFieldNumber">
            <summary>Field number for the "retry_transaction" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.TransactionOptions.Types.ReadWrite.RetryTransaction">
            <summary>
            An optional transaction to retry.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.TransactionOptions.Types.ReadOnly">
            <summary>
            Options for a transaction that can only be used to read documents.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.TransactionOptions.Types.ReadOnly.ReadTimeFieldNumber">
            <summary>Field number for the "read_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.TransactionOptions.Types.ReadOnly.ReadTime">
            <summary>
            Reads documents at the given time.
            This may not be older than 60 seconds.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.TransactionOptions.Types.ReadOnly.ConsistencySelectorOneofCase">
            <summary>Enum of possible cases for the "consistency_selector" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.DocumentReflection">
            <summary>Holder for reflection information generated from google/firestore/v1/document.proto</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DocumentReflection.Descriptor">
            <summary>File descriptor for google/firestore/v1/document.proto</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.Document">
             <summary>
             A Firestore document.
            
             Must not exceed 1 MiB - 4 bytes.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Document.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Document.Name">
            <summary>
            The resource name of the document, for example
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Document.FieldsFieldNumber">
            <summary>Field number for the "fields" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Document.Fields">
             <summary>
             The document's fields.
            
             The map keys represent field names.
            
             A simple field name contains only characters `a` to `z`, `A` to `Z`,
             `0` to `9`, or `_`, and must not start with `0` to `9`. For example,
             `foo_bar_17`.
            
             Field names matching the regular expression `__.*__` are reserved. Reserved
             field names are forbidden except in certain documented contexts. The map
             keys, represented as UTF-8, must not exceed 1,500 bytes and cannot be
             empty.
            
             Field paths may be used in other contexts to refer to structured fields
             defined here. For `map_value`, the field path is represented by the simple
             or quoted field names of the containing fields, delimited by `.`. For
             example, the structured field
             `"foo" : { map_value: { "x&amp;y" : { string_value: "hello" }}}` would be
             represented by the field path `foo.x&amp;y`.
            
             Within a field path, a quoted field name starts and ends with `` ` `` and
             may contain any character. Some characters, including `` ` ``, must be
             escaped using a `\`. For example, `` `x&amp;y` `` represents `x&amp;y` and
             `` `bak\`tik` `` represents `` bak`tik ``.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Document.CreateTimeFieldNumber">
            <summary>Field number for the "create_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Document.CreateTime">
             <summary>
             Output only. The time at which the document was created.
            
             This value increases monotonically when a document is deleted then
             recreated. It can also be compared to values from other documents and
             the `read_time` of a query.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Document.UpdateTimeFieldNumber">
            <summary>Field number for the "update_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Document.UpdateTime">
             <summary>
             Output only. The time at which the document was last changed.
            
             This value is initially set to the `create_time` then increases
             monotonically with each change to the document. It can also be
             compared to values from other documents and the `read_time` of a query.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.Value">
            <summary>
            A message that can hold any of the supported value types.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Value.NullValueFieldNumber">
            <summary>Field number for the "null_value" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Value.NullValue">
            <summary>
            A null value.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Value.BooleanValueFieldNumber">
            <summary>Field number for the "boolean_value" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Value.BooleanValue">
            <summary>
            A boolean value.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Value.IntegerValueFieldNumber">
            <summary>Field number for the "integer_value" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Value.IntegerValue">
            <summary>
            An integer value.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Value.DoubleValueFieldNumber">
            <summary>Field number for the "double_value" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Value.DoubleValue">
            <summary>
            A double value.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Value.TimestampValueFieldNumber">
            <summary>Field number for the "timestamp_value" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Value.TimestampValue">
             <summary>
             A timestamp value.
            
             Precise only to microseconds. When stored, any additional precision is
             rounded down.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Value.StringValueFieldNumber">
            <summary>Field number for the "string_value" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Value.StringValue">
             <summary>
             A string value.
            
             The string, represented as UTF-8, must not exceed 1 MiB - 89 bytes.
             Only the first 1,500 bytes of the UTF-8 representation are considered by
             queries.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Value.BytesValueFieldNumber">
            <summary>Field number for the "bytes_value" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Value.BytesValue">
             <summary>
             A bytes value.
            
             Must not exceed 1 MiB - 89 bytes.
             Only the first 1,500 bytes are considered by queries.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Value.ReferenceValueFieldNumber">
            <summary>Field number for the "reference_value" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Value.ReferenceValue">
            <summary>
            A reference to a document. For example:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Value.GeoPointValueFieldNumber">
            <summary>Field number for the "geo_point_value" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Value.GeoPointValue">
            <summary>
            A geo point value representing a point on the surface of Earth.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Value.ArrayValueFieldNumber">
            <summary>Field number for the "array_value" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Value.ArrayValue">
             <summary>
             An array value.
            
             Cannot directly contain another array value, though can contain an
             map which contains another array.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Value.MapValueFieldNumber">
            <summary>Field number for the "map_value" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Value.MapValue">
            <summary>
            A map value.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.Value.ValueTypeOneofCase">
            <summary>Enum of possible cases for the "value_type" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.ArrayValue">
            <summary>
            An array value.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ArrayValue.ValuesFieldNumber">
            <summary>Field number for the "values" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ArrayValue.Values">
            <summary>
            Values in the array.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.MapValue">
            <summary>
            A map value.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.MapValue.FieldsFieldNumber">
            <summary>Field number for the "fields" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.MapValue.Fields">
             <summary>
             The map's fields.
            
             The map keys represent field names. Field names matching the regular
             expression `__.*__` are reserved. Reserved field names are forbidden except
             in certain documented contexts. The map keys, represented as UTF-8, must
             not exceed 1,500 bytes and cannot be empty.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.FirestoreReflection">
            <summary>Holder for reflection information generated from google/firestore/v1/firestore.proto</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreReflection.Descriptor">
            <summary>File descriptor for google/firestore/v1/firestore.proto</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.GetDocumentRequest">
            <summary>
            The request for
            [Firestore.GetDocument][google.firestore.v1.Firestore.GetDocument].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.GetDocumentRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.GetDocumentRequest.Name">
            <summary>
            Required. The resource name of the Document to get. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.GetDocumentRequest.MaskFieldNumber">
            <summary>Field number for the "mask" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.GetDocumentRequest.Mask">
             <summary>
             The fields to return. If not set, returns all fields.
            
             If the document has a field that is not present in this mask, that field
             will not be returned in the response.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.GetDocumentRequest.TransactionFieldNumber">
            <summary>Field number for the "transaction" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.GetDocumentRequest.Transaction">
            <summary>
            Reads the document in a transaction.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.GetDocumentRequest.ReadTimeFieldNumber">
            <summary>Field number for the "read_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.GetDocumentRequest.ReadTime">
            <summary>
            Reads the version of the document at the given time.
            This may not be older than 270 seconds.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.GetDocumentRequest.ConsistencySelectorOneofCase">
            <summary>Enum of possible cases for the "consistency_selector" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.ListDocumentsRequest">
            <summary>
            The request for
            [Firestore.ListDocuments][google.firestore.v1.Firestore.ListDocuments].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListDocumentsRequest.ParentFieldNumber">
            <summary>Field number for the "parent" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListDocumentsRequest.Parent">
             <summary>
             Required. The parent resource name. In the format:
             `projects/{project_id}/databases/{database_id}/documents` or
             `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
            
             For example:
             `projects/my-project/databases/my-database/documents` or
             `projects/my-project/databases/my-database/documents/chatrooms/my-chatroom`
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListDocumentsRequest.CollectionIdFieldNumber">
            <summary>Field number for the "collection_id" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListDocumentsRequest.CollectionId">
             <summary>
             Optional. The collection ID, relative to `parent`, to list.
            
             For example: `chatrooms` or `messages`.
            
             This is optional, and when not provided, Firestore will list documents
             from all collections under the provided `parent`.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListDocumentsRequest.PageSizeFieldNumber">
            <summary>Field number for the "page_size" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListDocumentsRequest.PageSize">
             <summary>
             Optional. The maximum number of documents to return in a single response.
            
             Firestore may return fewer than this value.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListDocumentsRequest.PageTokenFieldNumber">
            <summary>Field number for the "page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListDocumentsRequest.PageToken">
             <summary>
             Optional. A page token, received from a previous `ListDocuments` response.
            
             Provide this to retrieve the subsequent page. When paginating, all other
             parameters (with the exception of `page_size`) must match the values set
             in the request that generated the page token.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListDocumentsRequest.OrderByFieldNumber">
            <summary>Field number for the "order_by" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListDocumentsRequest.OrderBy">
             <summary>
             Optional. The optional ordering of the documents to return.
            
             For example: `priority desc, __name__ desc`.
            
             This mirrors the [`ORDER BY`][google.firestore.v1.StructuredQuery.order_by]
             used in Firestore queries but in a string representation. When absent,
             documents are ordered based on `__name__ ASC`.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListDocumentsRequest.MaskFieldNumber">
            <summary>Field number for the "mask" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListDocumentsRequest.Mask">
             <summary>
             Optional. The fields to return. If not set, returns all fields.
            
             If a document has a field that is not present in this mask, that field
             will not be returned in the response.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListDocumentsRequest.TransactionFieldNumber">
            <summary>Field number for the "transaction" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListDocumentsRequest.Transaction">
            <summary>
            Perform the read as part of an already active transaction.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListDocumentsRequest.ReadTimeFieldNumber">
            <summary>Field number for the "read_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListDocumentsRequest.ReadTime">
             <summary>
             Perform the read at the provided time.
            
             This may not be older than 270 seconds.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListDocumentsRequest.ShowMissingFieldNumber">
            <summary>Field number for the "show_missing" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListDocumentsRequest.ShowMissing">
             <summary>
             If the list should show missing documents.
            
             A document is missing if it does not exist, but there are sub-documents
             nested underneath it. When true, such missing documents will be returned
             with a key but will not have fields,
             [`create_time`][google.firestore.v1.Document.create_time], or
             [`update_time`][google.firestore.v1.Document.update_time] set.
            
             Requests with `show_missing` may not specify `where` or `order_by`.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.ListDocumentsRequest.ConsistencySelectorOneofCase">
            <summary>Enum of possible cases for the "consistency_selector" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.ListDocumentsResponse">
            <summary>
            The response for
            [Firestore.ListDocuments][google.firestore.v1.Firestore.ListDocuments].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListDocumentsResponse.DocumentsFieldNumber">
            <summary>Field number for the "documents" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListDocumentsResponse.Documents">
            <summary>
            The Documents found.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListDocumentsResponse.NextPageTokenFieldNumber">
            <summary>Field number for the "next_page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListDocumentsResponse.NextPageToken">
             <summary>
             A token to retrieve the next page of documents.
            
             If this field is omitted, there are no subsequent pages.
             </summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.ListDocumentsResponse.GetEnumerator">
            <summary>Returns an enumerator that iterates through the resources in this response.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.CreateDocumentRequest">
            <summary>
            The request for
            [Firestore.CreateDocument][google.firestore.v1.Firestore.CreateDocument].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.CreateDocumentRequest.ParentFieldNumber">
            <summary>Field number for the "parent" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.CreateDocumentRequest.Parent">
            <summary>
            Required. The parent resource. For example:
            `projects/{project_id}/databases/{database_id}/documents` or
            `projects/{project_id}/databases/{database_id}/documents/chatrooms/{chatroom_id}`
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.CreateDocumentRequest.CollectionIdFieldNumber">
            <summary>Field number for the "collection_id" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.CreateDocumentRequest.CollectionId">
            <summary>
            Required. The collection ID, relative to `parent`, to list. For example:
            `chatrooms`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.CreateDocumentRequest.DocumentIdFieldNumber">
            <summary>Field number for the "document_id" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.CreateDocumentRequest.DocumentId">
             <summary>
             The client-assigned document ID to use for this document.
            
             Optional. If not specified, an ID will be assigned by the service.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.CreateDocumentRequest.DocumentFieldNumber">
            <summary>Field number for the "document" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.CreateDocumentRequest.Document">
            <summary>
            Required. The document to create. `name` must not be set.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.CreateDocumentRequest.MaskFieldNumber">
            <summary>Field number for the "mask" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.CreateDocumentRequest.Mask">
             <summary>
             The fields to return. If not set, returns all fields.
            
             If the document has a field that is not present in this mask, that field
             will not be returned in the response.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.UpdateDocumentRequest">
            <summary>
            The request for
            [Firestore.UpdateDocument][google.firestore.v1.Firestore.UpdateDocument].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.UpdateDocumentRequest.DocumentFieldNumber">
            <summary>Field number for the "document" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.UpdateDocumentRequest.Document">
            <summary>
            Required. The updated document.
            Creates the document if it does not already exist.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.UpdateDocumentRequest.UpdateMaskFieldNumber">
            <summary>Field number for the "update_mask" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.UpdateDocumentRequest.UpdateMask">
             <summary>
             The fields to update.
             None of the field paths in the mask may contain a reserved name.
            
             If the document exists on the server and has fields not referenced in the
             mask, they are left unchanged.
             Fields referenced in the mask, but not present in the input document, are
             deleted from the document on the server.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.UpdateDocumentRequest.MaskFieldNumber">
            <summary>Field number for the "mask" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.UpdateDocumentRequest.Mask">
             <summary>
             The fields to return. If not set, returns all fields.
            
             If the document has a field that is not present in this mask, that field
             will not be returned in the response.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.UpdateDocumentRequest.CurrentDocumentFieldNumber">
            <summary>Field number for the "current_document" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.UpdateDocumentRequest.CurrentDocument">
            <summary>
            An optional precondition on the document.
            The request will fail if this is set and not met by the target document.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.DeleteDocumentRequest">
            <summary>
            The request for
            [Firestore.DeleteDocument][google.firestore.v1.Firestore.DeleteDocument].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DeleteDocumentRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DeleteDocumentRequest.Name">
            <summary>
            Required. The resource name of the Document to delete. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DeleteDocumentRequest.CurrentDocumentFieldNumber">
            <summary>Field number for the "current_document" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DeleteDocumentRequest.CurrentDocument">
            <summary>
            An optional precondition on the document.
            The request will fail if this is set and not met by the target document.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.BatchGetDocumentsRequest">
            <summary>
            The request for
            [Firestore.BatchGetDocuments][google.firestore.v1.Firestore.BatchGetDocuments].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.BatchGetDocumentsRequest.DatabaseFieldNumber">
            <summary>Field number for the "database" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.BatchGetDocumentsRequest.Database">
            <summary>
            Required. The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.BatchGetDocumentsRequest.DocumentsFieldNumber">
            <summary>Field number for the "documents" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.BatchGetDocumentsRequest.Documents">
            <summary>
            The names of the documents to retrieve. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
            The request will fail if any of the document is not a child resource of the
            given `database`. Duplicate names will be elided.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.BatchGetDocumentsRequest.MaskFieldNumber">
            <summary>Field number for the "mask" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.BatchGetDocumentsRequest.Mask">
             <summary>
             The fields to return. If not set, returns all fields.
            
             If a document has a field that is not present in this mask, that field will
             not be returned in the response.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.BatchGetDocumentsRequest.TransactionFieldNumber">
            <summary>Field number for the "transaction" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.BatchGetDocumentsRequest.Transaction">
            <summary>
            Reads documents in a transaction.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.BatchGetDocumentsRequest.NewTransactionFieldNumber">
            <summary>Field number for the "new_transaction" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.BatchGetDocumentsRequest.NewTransaction">
            <summary>
            Starts a new transaction and reads the documents.
            Defaults to a read-only transaction.
            The new transaction ID will be returned as the first response in the
            stream.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.BatchGetDocumentsRequest.ReadTimeFieldNumber">
            <summary>Field number for the "read_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.BatchGetDocumentsRequest.ReadTime">
            <summary>
            Reads documents as they were at the given time.
            This may not be older than 270 seconds.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.BatchGetDocumentsRequest.ConsistencySelectorOneofCase">
            <summary>Enum of possible cases for the "consistency_selector" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.BatchGetDocumentsResponse">
            <summary>
            The streamed response for
            [Firestore.BatchGetDocuments][google.firestore.v1.Firestore.BatchGetDocuments].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.BatchGetDocumentsResponse.FoundFieldNumber">
            <summary>Field number for the "found" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.BatchGetDocumentsResponse.Found">
            <summary>
            A document that was requested.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.BatchGetDocumentsResponse.MissingFieldNumber">
            <summary>Field number for the "missing" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.BatchGetDocumentsResponse.Missing">
            <summary>
            A document name that was requested but does not exist. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.BatchGetDocumentsResponse.TransactionFieldNumber">
            <summary>Field number for the "transaction" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.BatchGetDocumentsResponse.Transaction">
            <summary>
            The transaction that was started as part of this request.
            Will only be set in the first response, and only if
            [BatchGetDocumentsRequest.new_transaction][google.firestore.v1.BatchGetDocumentsRequest.new_transaction]
            was set in the request.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.BatchGetDocumentsResponse.ReadTimeFieldNumber">
            <summary>Field number for the "read_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.BatchGetDocumentsResponse.ReadTime">
            <summary>
            The time at which the document was read.
            This may be monotically increasing, in this case the previous documents in
            the result stream are guaranteed not to have changed between their
            read_time and this one.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.BatchGetDocumentsResponse.ResultOneofCase">
            <summary>Enum of possible cases for the "result" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.BeginTransactionRequest">
            <summary>
            The request for
            [Firestore.BeginTransaction][google.firestore.v1.Firestore.BeginTransaction].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.BeginTransactionRequest.DatabaseFieldNumber">
            <summary>Field number for the "database" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.BeginTransactionRequest.Database">
            <summary>
            Required. The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.BeginTransactionRequest.OptionsFieldNumber">
            <summary>Field number for the "options" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.BeginTransactionRequest.Options">
            <summary>
            The options for the transaction.
            Defaults to a read-write transaction.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.BeginTransactionResponse">
            <summary>
            The response for
            [Firestore.BeginTransaction][google.firestore.v1.Firestore.BeginTransaction].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.BeginTransactionResponse.TransactionFieldNumber">
            <summary>Field number for the "transaction" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.BeginTransactionResponse.Transaction">
            <summary>
            The transaction that was started.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.CommitRequest">
            <summary>
            The request for [Firestore.Commit][google.firestore.v1.Firestore.Commit].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.CommitRequest.DatabaseFieldNumber">
            <summary>Field number for the "database" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.CommitRequest.Database">
            <summary>
            Required. The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.CommitRequest.WritesFieldNumber">
            <summary>Field number for the "writes" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.CommitRequest.Writes">
             <summary>
             The writes to apply.
            
             Always executed atomically and in order.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.CommitRequest.TransactionFieldNumber">
            <summary>Field number for the "transaction" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.CommitRequest.Transaction">
            <summary>
            If set, applies all writes in this transaction, and commits it.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.CommitResponse">
            <summary>
            The response for [Firestore.Commit][google.firestore.v1.Firestore.Commit].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.CommitResponse.WriteResultsFieldNumber">
            <summary>Field number for the "write_results" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.CommitResponse.WriteResults">
             <summary>
             The result of applying the writes.
            
             This i-th write result corresponds to the i-th write in the
             request.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.CommitResponse.CommitTimeFieldNumber">
            <summary>Field number for the "commit_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.CommitResponse.CommitTime">
            <summary>
            The time at which the commit occurred. Any read with an equal or greater
            `read_time` is guaranteed to see the effects of the commit.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.RollbackRequest">
            <summary>
            The request for [Firestore.Rollback][google.firestore.v1.Firestore.Rollback].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.RollbackRequest.DatabaseFieldNumber">
            <summary>Field number for the "database" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.RollbackRequest.Database">
            <summary>
            Required. The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.RollbackRequest.TransactionFieldNumber">
            <summary>Field number for the "transaction" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.RollbackRequest.Transaction">
            <summary>
            Required. The transaction to roll back.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.RunQueryRequest">
            <summary>
            The request for [Firestore.RunQuery][google.firestore.v1.Firestore.RunQuery].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.RunQueryRequest.ParentFieldNumber">
            <summary>Field number for the "parent" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.RunQueryRequest.Parent">
            <summary>
            Required. The parent resource name. In the format:
            `projects/{project_id}/databases/{database_id}/documents` or
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
            For example:
            `projects/my-project/databases/my-database/documents` or
            `projects/my-project/databases/my-database/documents/chatrooms/my-chatroom`
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.RunQueryRequest.StructuredQueryFieldNumber">
            <summary>Field number for the "structured_query" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.RunQueryRequest.StructuredQuery">
            <summary>
            A structured query.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.RunQueryRequest.TransactionFieldNumber">
            <summary>Field number for the "transaction" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.RunQueryRequest.Transaction">
             <summary>
             Run the query within an already active transaction.
            
             The value here is the opaque transaction ID to execute the query in.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.RunQueryRequest.NewTransactionFieldNumber">
            <summary>Field number for the "new_transaction" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.RunQueryRequest.NewTransaction">
            <summary>
            Starts a new transaction and reads the documents.
            Defaults to a read-only transaction.
            The new transaction ID will be returned as the first response in the
            stream.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.RunQueryRequest.ReadTimeFieldNumber">
            <summary>Field number for the "read_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.RunQueryRequest.ReadTime">
            <summary>
            Reads documents as they were at the given time.
            This may not be older than 270 seconds.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.RunQueryRequest.QueryTypeOneofCase">
            <summary>Enum of possible cases for the "query_type" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.RunQueryRequest.ConsistencySelectorOneofCase">
            <summary>Enum of possible cases for the "consistency_selector" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.RunQueryResponse">
            <summary>
            The response for
            [Firestore.RunQuery][google.firestore.v1.Firestore.RunQuery].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.RunQueryResponse.TransactionFieldNumber">
            <summary>Field number for the "transaction" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.RunQueryResponse.Transaction">
            <summary>
            The transaction that was started as part of this request.
            Can only be set in the first response, and only if
            [RunQueryRequest.new_transaction][google.firestore.v1.RunQueryRequest.new_transaction]
            was set in the request. If set, no other fields will be set in this
            response.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.RunQueryResponse.DocumentFieldNumber">
            <summary>Field number for the "document" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.RunQueryResponse.Document">
            <summary>
            A query result, not set when reporting partial progress.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.RunQueryResponse.ReadTimeFieldNumber">
            <summary>Field number for the "read_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.RunQueryResponse.ReadTime">
             <summary>
             The time at which the document was read. This may be monotonically
             increasing; in this case, the previous documents in the result stream are
             guaranteed not to have changed between their `read_time` and this one.
            
             If the query returns no results, a response with `read_time` and no
             `document` will be sent, and this represents the time at which the query
             was run.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.RunQueryResponse.SkippedResultsFieldNumber">
            <summary>Field number for the "skipped_results" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.RunQueryResponse.SkippedResults">
            <summary>
            The number of results that have been skipped due to an offset between
            the last response and the current response.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.RunQueryResponse.DoneFieldNumber">
            <summary>Field number for the "done" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.RunQueryResponse.Done">
            <summary>
            If present, Firestore has completely finished the request and no more
            documents will be returned.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.RunQueryResponse.ContinuationSelectorOneofCase">
            <summary>Enum of possible cases for the "continuation_selector" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.RunAggregationQueryRequest">
            <summary>
            The request for
            [Firestore.RunAggregationQuery][google.firestore.v1.Firestore.RunAggregationQuery].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.RunAggregationQueryRequest.ParentFieldNumber">
            <summary>Field number for the "parent" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.RunAggregationQueryRequest.Parent">
            <summary>
            Required. The parent resource name. In the format:
            `projects/{project_id}/databases/{database_id}/documents` or
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
            For example:
            `projects/my-project/databases/my-database/documents` or
            `projects/my-project/databases/my-database/documents/chatrooms/my-chatroom`
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.RunAggregationQueryRequest.StructuredAggregationQueryFieldNumber">
            <summary>Field number for the "structured_aggregation_query" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.RunAggregationQueryRequest.StructuredAggregationQuery">
            <summary>
            An aggregation query.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.RunAggregationQueryRequest.TransactionFieldNumber">
            <summary>Field number for the "transaction" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.RunAggregationQueryRequest.Transaction">
             <summary>
             Run the aggregation within an already active transaction.
            
             The value here is the opaque transaction ID to execute the query in.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.RunAggregationQueryRequest.NewTransactionFieldNumber">
            <summary>Field number for the "new_transaction" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.RunAggregationQueryRequest.NewTransaction">
             <summary>
             Starts a new transaction as part of the query, defaulting to read-only.
            
             The new transaction ID will be returned as the first response in the
             stream.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.RunAggregationQueryRequest.ReadTimeFieldNumber">
            <summary>Field number for the "read_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.RunAggregationQueryRequest.ReadTime">
             <summary>
             Executes the query at the given timestamp.
            
             Requires:
            
             * Cannot be more than 270 seconds in the past.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.RunAggregationQueryRequest.QueryTypeOneofCase">
            <summary>Enum of possible cases for the "query_type" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.RunAggregationQueryRequest.ConsistencySelectorOneofCase">
            <summary>Enum of possible cases for the "consistency_selector" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.RunAggregationQueryResponse">
            <summary>
            The response for
            [Firestore.RunAggregationQuery][google.firestore.v1.Firestore.RunAggregationQuery].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.RunAggregationQueryResponse.ResultFieldNumber">
            <summary>Field number for the "result" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.RunAggregationQueryResponse.Result">
             <summary>
             A single aggregation result.
            
             Not present when reporting partial progress.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.RunAggregationQueryResponse.TransactionFieldNumber">
            <summary>Field number for the "transaction" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.RunAggregationQueryResponse.Transaction">
             <summary>
             The transaction that was started as part of this request.
            
             Only present on the first response when the request requested to start
             a new transaction.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.RunAggregationQueryResponse.ReadTimeFieldNumber">
            <summary>Field number for the "read_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.RunAggregationQueryResponse.ReadTime">
             <summary>
             The time at which the aggregate result was computed. This is always
             monotonically increasing; in this case, the previous AggregationResult in
             the result stream are guaranteed not to have changed between their
             `read_time` and this one.
            
             If the query returns no results, a response with `read_time` and no
             `result` will be sent, and this represents the time at which the query
             was run.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.PartitionQueryRequest">
            <summary>
            The request for
            [Firestore.PartitionQuery][google.firestore.v1.Firestore.PartitionQuery].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.PartitionQueryRequest.ParentFieldNumber">
            <summary>Field number for the "parent" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.PartitionQueryRequest.Parent">
            <summary>
            Required. The parent resource name. In the format:
            `projects/{project_id}/databases/{database_id}/documents`.
            Document resource names are not supported; only database resource names
            can be specified.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.PartitionQueryRequest.StructuredQueryFieldNumber">
            <summary>Field number for the "structured_query" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.PartitionQueryRequest.StructuredQuery">
            <summary>
            A structured query.
            Query must specify collection with all descendants and be ordered by name
            ascending. Other filters, order bys, limits, offsets, and start/end
            cursors are not supported.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.PartitionQueryRequest.PartitionCountFieldNumber">
            <summary>Field number for the "partition_count" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.PartitionQueryRequest.PartitionCount">
             <summary>
             The desired maximum number of partition points.
             The partitions may be returned across multiple pages of results.
             The number must be positive. The actual number of partitions
             returned may be fewer.
            
             For example, this may be set to one fewer than the number of parallel
             queries to be run, or in running a data pipeline job, one fewer than the
             number of workers or compute instances available.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.PartitionQueryRequest.PageTokenFieldNumber">
            <summary>Field number for the "page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.PartitionQueryRequest.PageToken">
             <summary>
             The `next_page_token` value returned from a previous call to
             PartitionQuery that may be used to get an additional set of results.
             There are no ordering guarantees between sets of results. Thus, using
             multiple sets of results will require merging the different result sets.
            
             For example, two subsequent calls using a page_token may return:
            
              * cursor B, cursor M, cursor Q
              * cursor A, cursor U, cursor W
            
             To obtain a complete result set ordered with respect to the results of the
             query supplied to PartitionQuery, the results sets should be merged:
             cursor A, cursor B, cursor M, cursor Q, cursor U, cursor W
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.PartitionQueryRequest.PageSizeFieldNumber">
            <summary>Field number for the "page_size" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.PartitionQueryRequest.PageSize">
             <summary>
             The maximum number of partitions to return in this call, subject to
             `partition_count`.
            
             For example, if `partition_count` = 10 and `page_size` = 8, the first call
             to PartitionQuery will return up to 8 partitions and a `next_page_token`
             if more results exist. A second call to PartitionQuery will return up to
             2 partitions, to complete the total of 10 specified in `partition_count`.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.PartitionQueryRequest.ReadTimeFieldNumber">
            <summary>Field number for the "read_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.PartitionQueryRequest.ReadTime">
            <summary>
            Reads documents as they were at the given time.
            This may not be older than 270 seconds.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.PartitionQueryRequest.QueryTypeOneofCase">
            <summary>Enum of possible cases for the "query_type" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.PartitionQueryRequest.ConsistencySelectorOneofCase">
            <summary>Enum of possible cases for the "consistency_selector" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.PartitionQueryResponse">
            <summary>
            The response for
            [Firestore.PartitionQuery][google.firestore.v1.Firestore.PartitionQuery].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.PartitionQueryResponse.PartitionsFieldNumber">
            <summary>Field number for the "partitions" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.PartitionQueryResponse.Partitions">
             <summary>
             Partition results.
             Each partition is a split point that can be used by RunQuery as a starting
             or end point for the query results. The RunQuery requests must be made with
             the same query supplied to this PartitionQuery request. The partition
             cursors will be ordered according to same ordering as the results of the
             query supplied to PartitionQuery.
            
             For example, if a PartitionQuery request returns partition cursors A and B,
             running the following three queries will return the entire result set of
             the original query:
            
              * query, end_at A
              * query, start_at A, end_at B
              * query, start_at B
            
             An empty result may indicate that the query has too few results to be
             partitioned.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.PartitionQueryResponse.NextPageTokenFieldNumber">
            <summary>Field number for the "next_page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.PartitionQueryResponse.NextPageToken">
            <summary>
            A page token that may be used to request an additional set of results, up
            to the number specified by `partition_count` in the PartitionQuery request.
            If blank, there are no more results.
            </summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.PartitionQueryResponse.GetEnumerator">
            <summary>Returns an enumerator that iterates through the resources in this response.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.WriteRequest">
             <summary>
             The request for [Firestore.Write][google.firestore.v1.Firestore.Write].
            
             The first request creates a stream, or resumes an existing one from a token.
            
             When creating a new stream, the server replies with a response containing
             only an ID and a token, to use in the next request.
            
             When resuming a stream, the server first streams any responses later than the
             given token, then a response containing only an up-to-date token, to use in
             the next request.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.WriteRequest.DatabaseFieldNumber">
            <summary>Field number for the "database" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.WriteRequest.Database">
            <summary>
            Required. The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.
            This is only required in the first message.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.WriteRequest.StreamIdFieldNumber">
            <summary>Field number for the "stream_id" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.WriteRequest.StreamId">
            <summary>
            The ID of the write stream to resume.
            This may only be set in the first message. When left empty, a new write
            stream will be created.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.WriteRequest.WritesFieldNumber">
            <summary>Field number for the "writes" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.WriteRequest.Writes">
             <summary>
             The writes to apply.
            
             Always executed atomically and in order.
             This must be empty on the first request.
             This may be empty on the last request.
             This must not be empty on all other requests.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.WriteRequest.StreamTokenFieldNumber">
            <summary>Field number for the "stream_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.WriteRequest.StreamToken">
             <summary>
             A stream token that was previously sent by the server.
            
             The client should set this field to the token from the most recent
             [WriteResponse][google.firestore.v1.WriteResponse] it has received. This
             acknowledges that the client has received responses up to this token. After
             sending this token, earlier tokens may not be used anymore.
            
             The server may close the stream if there are too many unacknowledged
             responses.
            
             Leave this field unset when creating a new stream. To resume a stream at
             a specific point, set this field and the `stream_id` field.
            
             Leave this field unset when creating a new stream.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.WriteRequest.LabelsFieldNumber">
            <summary>Field number for the "labels" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.WriteRequest.Labels">
            <summary>
            Labels associated with this write request.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.WriteResponse">
            <summary>
            The response for [Firestore.Write][google.firestore.v1.Firestore.Write].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.WriteResponse.StreamIdFieldNumber">
            <summary>Field number for the "stream_id" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.WriteResponse.StreamId">
            <summary>
            The ID of the stream.
            Only set on the first message, when a new stream was created.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.WriteResponse.StreamTokenFieldNumber">
            <summary>Field number for the "stream_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.WriteResponse.StreamToken">
             <summary>
             A token that represents the position of this response in the stream.
             This can be used by a client to resume the stream at this point.
            
             This field is always set.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.WriteResponse.WriteResultsFieldNumber">
            <summary>Field number for the "write_results" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.WriteResponse.WriteResults">
             <summary>
             The result of applying the writes.
            
             This i-th write result corresponds to the i-th write in the
             request.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.WriteResponse.CommitTimeFieldNumber">
            <summary>Field number for the "commit_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.WriteResponse.CommitTime">
            <summary>
            The time at which the commit occurred. Any read with an equal or greater
            `read_time` is guaranteed to see the effects of the write.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.ListenRequest">
            <summary>
            A request for [Firestore.Listen][google.firestore.v1.Firestore.Listen]
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListenRequest.DatabaseFieldNumber">
            <summary>Field number for the "database" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListenRequest.Database">
            <summary>
            Required. The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListenRequest.AddTargetFieldNumber">
            <summary>Field number for the "add_target" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListenRequest.AddTarget">
            <summary>
            A target to add to this stream.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListenRequest.RemoveTargetFieldNumber">
            <summary>Field number for the "remove_target" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListenRequest.RemoveTarget">
            <summary>
            The ID of a target to remove from this stream.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListenRequest.LabelsFieldNumber">
            <summary>Field number for the "labels" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListenRequest.Labels">
            <summary>
            Labels associated with this target change.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.ListenRequest.TargetChangeOneofCase">
            <summary>Enum of possible cases for the "target_change" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.ListenResponse">
            <summary>
            The response for [Firestore.Listen][google.firestore.v1.Firestore.Listen].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListenResponse.TargetChangeFieldNumber">
            <summary>Field number for the "target_change" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListenResponse.TargetChange">
            <summary>
            Targets have changed.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListenResponse.DocumentChangeFieldNumber">
            <summary>Field number for the "document_change" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListenResponse.DocumentChange">
            <summary>
            A [Document][google.firestore.v1.Document] has changed.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListenResponse.DocumentDeleteFieldNumber">
            <summary>Field number for the "document_delete" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListenResponse.DocumentDelete">
            <summary>
            A [Document][google.firestore.v1.Document] has been deleted.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListenResponse.DocumentRemoveFieldNumber">
            <summary>Field number for the "document_remove" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListenResponse.DocumentRemove">
            <summary>
            A [Document][google.firestore.v1.Document] has been removed from a target
            (because it is no longer relevant to that target).
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListenResponse.FilterFieldNumber">
            <summary>Field number for the "filter" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListenResponse.Filter">
             <summary>
             A filter to apply to the set of documents previously returned for the
             given target.
            
             Returned when documents may have been removed from the given target, but
             the exact documents are unknown.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.ListenResponse.ResponseTypeOneofCase">
            <summary>Enum of possible cases for the "response_type" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.Target">
            <summary>
            A specification of a set of documents to listen to.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Target.QueryFieldNumber">
            <summary>Field number for the "query" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Target.Query">
            <summary>
            A target specified by a query.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Target.DocumentsFieldNumber">
            <summary>Field number for the "documents" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Target.Documents">
            <summary>
            A target specified by a set of document names.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Target.ResumeTokenFieldNumber">
            <summary>Field number for the "resume_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Target.ResumeToken">
             <summary>
             A resume token from a prior
             [TargetChange][google.firestore.v1.TargetChange] for an identical target.
            
             Using a resume token with a different target is unsupported and may fail.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Target.ReadTimeFieldNumber">
            <summary>Field number for the "read_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Target.ReadTime">
             <summary>
             Start listening after a specific `read_time`.
            
             The client must know the state of matching documents at this time.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Target.TargetIdFieldNumber">
            <summary>Field number for the "target_id" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Target.TargetId">
            <summary>
            The target ID that identifies the target on the stream. Must be a positive
            number and non-zero.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Target.OnceFieldNumber">
            <summary>Field number for the "once" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Target.Once">
            <summary>
            If the target should be removed once it is current and consistent.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.Target.TargetTypeOneofCase">
            <summary>Enum of possible cases for the "target_type" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.Target.ResumeTypeOneofCase">
            <summary>Enum of possible cases for the "resume_type" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.Target.Types">
            <summary>Container for nested types declared in the Target message type.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.Target.Types.DocumentsTarget">
            <summary>
            A target specified by a set of documents names.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Target.Types.DocumentsTarget.DocumentsFieldNumber">
            <summary>Field number for the "documents" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Target.Types.DocumentsTarget.Documents">
            <summary>
            The names of the documents to retrieve. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
            The request will fail if any of the document is not a child resource of
            the given `database`. Duplicate names will be elided.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.Target.Types.QueryTarget">
            <summary>
            A target specified by a query.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Target.Types.QueryTarget.ParentFieldNumber">
            <summary>Field number for the "parent" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Target.Types.QueryTarget.Parent">
            <summary>
            The parent resource name. In the format:
            `projects/{project_id}/databases/{database_id}/documents` or
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
            For example:
            `projects/my-project/databases/my-database/documents` or
            `projects/my-project/databases/my-database/documents/chatrooms/my-chatroom`
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Target.Types.QueryTarget.StructuredQueryFieldNumber">
            <summary>Field number for the "structured_query" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Target.Types.QueryTarget.StructuredQuery">
            <summary>
            A structured query.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.Target.Types.QueryTarget.QueryTypeOneofCase">
            <summary>Enum of possible cases for the "query_type" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.TargetChange">
            <summary>
            Targets being watched have changed.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.TargetChange.TargetChangeTypeFieldNumber">
            <summary>Field number for the "target_change_type" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.TargetChange.TargetChangeType">
            <summary>
            The type of change that occurred.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.TargetChange.TargetIdsFieldNumber">
            <summary>Field number for the "target_ids" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.TargetChange.TargetIds">
             <summary>
             The target IDs of targets that have changed.
            
             If empty, the change applies to all targets.
            
             The order of the target IDs is not defined.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.TargetChange.CauseFieldNumber">
            <summary>Field number for the "cause" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.TargetChange.Cause">
            <summary>
            The error that resulted in this change, if applicable.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.TargetChange.ResumeTokenFieldNumber">
            <summary>Field number for the "resume_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.TargetChange.ResumeToken">
             <summary>
             A token that can be used to resume the stream for the given `target_ids`,
             or all targets if `target_ids` is empty.
            
             Not set on every target change.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.TargetChange.ReadTimeFieldNumber">
            <summary>Field number for the "read_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.TargetChange.ReadTime">
             <summary>
             The consistent `read_time` for the given `target_ids` (omitted when the
             target_ids are not at a consistent snapshot).
            
             The stream is guaranteed to send a `read_time` with `target_ids` empty
             whenever the entire stream reaches a new consistent snapshot. ADD,
             CURRENT, and RESET messages are guaranteed to (eventually) result in a
             new consistent snapshot (while NO_CHANGE and REMOVE messages are not).
            
             For a given stream, `read_time` is guaranteed to be monotonically
             increasing.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.TargetChange.Types">
            <summary>Container for nested types declared in the TargetChange message type.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.TargetChange.Types.TargetChangeType">
            <summary>
            The type of change.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.TargetChange.Types.TargetChangeType.NoChange">
            <summary>
            No change has occurred. Used only to send an updated `resume_token`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.TargetChange.Types.TargetChangeType.Add">
            <summary>
            The targets have been added.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.TargetChange.Types.TargetChangeType.Remove">
            <summary>
            The targets have been removed.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.TargetChange.Types.TargetChangeType.Current">
             <summary>
             The targets reflect all changes committed before the targets were added
             to the stream.
            
             This will be sent after or with a `read_time` that is greater than or
             equal to the time at which the targets were added.
            
             Listeners can wait for this change if read-after-write semantics
             are desired.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.TargetChange.Types.TargetChangeType.Reset">
             <summary>
             The targets have been reset, and a new initial state for the targets
             will be returned in subsequent changes.
            
             After the initial state is complete, `CURRENT` will be returned even
             if the target was previously indicated to be `CURRENT`.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.ListCollectionIdsRequest">
            <summary>
            The request for
            [Firestore.ListCollectionIds][google.firestore.v1.Firestore.ListCollectionIds].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListCollectionIdsRequest.ParentFieldNumber">
            <summary>Field number for the "parent" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListCollectionIdsRequest.Parent">
            <summary>
            Required. The parent document. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
            For example:
            `projects/my-project/databases/my-database/documents/chatrooms/my-chatroom`
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListCollectionIdsRequest.PageSizeFieldNumber">
            <summary>Field number for the "page_size" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListCollectionIdsRequest.PageSize">
            <summary>
            The maximum number of results to return.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListCollectionIdsRequest.PageTokenFieldNumber">
            <summary>Field number for the "page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListCollectionIdsRequest.PageToken">
            <summary>
            A page token. Must be a value from
            [ListCollectionIdsResponse][google.firestore.v1.ListCollectionIdsResponse].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListCollectionIdsRequest.ReadTimeFieldNumber">
            <summary>Field number for the "read_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListCollectionIdsRequest.ReadTime">
            <summary>
            Reads documents as they were at the given time.
            This may not be older than 270 seconds.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.ListCollectionIdsRequest.ConsistencySelectorOneofCase">
            <summary>Enum of possible cases for the "consistency_selector" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.ListCollectionIdsResponse">
            <summary>
            The response from
            [Firestore.ListCollectionIds][google.firestore.v1.Firestore.ListCollectionIds].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListCollectionIdsResponse.CollectionIdsFieldNumber">
            <summary>Field number for the "collection_ids" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListCollectionIdsResponse.CollectionIds">
            <summary>
            The collection ids.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ListCollectionIdsResponse.NextPageTokenFieldNumber">
            <summary>Field number for the "next_page_token" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ListCollectionIdsResponse.NextPageToken">
            <summary>
            A page token that may be used to continue the list.
            </summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.ListCollectionIdsResponse.GetEnumerator">
            <summary>Returns an enumerator that iterates through the resources in this response.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.BatchWriteRequest">
            <summary>
            The request for
            [Firestore.BatchWrite][google.firestore.v1.Firestore.BatchWrite].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.BatchWriteRequest.DatabaseFieldNumber">
            <summary>Field number for the "database" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.BatchWriteRequest.Database">
            <summary>
            Required. The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.BatchWriteRequest.WritesFieldNumber">
            <summary>Field number for the "writes" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.BatchWriteRequest.Writes">
             <summary>
             The writes to apply.
            
             Method does not apply writes atomically and does not guarantee ordering.
             Each write succeeds or fails independently. You cannot write to the same
             document more than once per request.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.BatchWriteRequest.LabelsFieldNumber">
            <summary>Field number for the "labels" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.BatchWriteRequest.Labels">
            <summary>
            Labels associated with this batch write.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.BatchWriteResponse">
            <summary>
            The response from
            [Firestore.BatchWrite][google.firestore.v1.Firestore.BatchWrite].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.BatchWriteResponse.WriteResultsFieldNumber">
            <summary>Field number for the "write_results" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.BatchWriteResponse.WriteResults">
             <summary>
             The result of applying the writes.
            
             This i-th write result corresponds to the i-th write in the
             request.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.BatchWriteResponse.StatusFieldNumber">
            <summary>Field number for the "status" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.BatchWriteResponse.Status">
             <summary>
             The status of applying the writes.
            
             This i-th write status corresponds to the i-th write in the
             request.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.FirestoreSettings">
            <summary>Settings for <see cref="T:Google.Cloud.Firestore.V1.FirestoreClient"/> instances.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreSettings.GetDefault">
            <summary>Get a new instance of the default <see cref="T:Google.Cloud.Firestore.V1.FirestoreSettings"/>.</summary>
            <returns>A new instance of the default <see cref="T:Google.Cloud.Firestore.V1.FirestoreSettings"/>.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreSettings.#ctor">
            <summary>Constructs a new <see cref="T:Google.Cloud.Firestore.V1.FirestoreSettings"/> object with default settings.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreSettings.GetDocumentSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to <c>FirestoreClient.GetDocument</c>
             and <c>FirestoreClient.GetDocumentAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds.</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds.</description></item>
            <item><description>Maximum attempts: 5</description></item>
            <item>
            <description>
            Retriable status codes: <see cref="F:Grpc.Core.StatusCode.ResourceExhausted"/>,
            <see cref="F:Grpc.Core.StatusCode.Unavailable"/>, <see cref="F:Grpc.Core.StatusCode.Internal"/>,
            <see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/>.
            </description>
            </item>
            <item><description>Timeout: 60 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreSettings.ListDocumentsSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreClient.ListDocuments</c> and <c>FirestoreClient.ListDocumentsAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds.</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds.</description></item>
            <item><description>Maximum attempts: 5</description></item>
            <item>
            <description>
            Retriable status codes: <see cref="F:Grpc.Core.StatusCode.ResourceExhausted"/>,
            <see cref="F:Grpc.Core.StatusCode.Unavailable"/>, <see cref="F:Grpc.Core.StatusCode.Internal"/>,
            <see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/>.
            </description>
            </item>
            <item><description>Timeout: 60 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreSettings.UpdateDocumentSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreClient.UpdateDocument</c> and <c>FirestoreClient.UpdateDocumentAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds.</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds.</description></item>
            <item><description>Maximum attempts: 5</description></item>
            <item>
            <description>
            Retriable status codes: <see cref="F:Grpc.Core.StatusCode.ResourceExhausted"/>,
            <see cref="F:Grpc.Core.StatusCode.Unavailable"/>.
            </description>
            </item>
            <item><description>Timeout: 60 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreSettings.DeleteDocumentSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreClient.DeleteDocument</c> and <c>FirestoreClient.DeleteDocumentAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds.</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds.</description></item>
            <item><description>Maximum attempts: 5</description></item>
            <item>
            <description>
            Retriable status codes: <see cref="F:Grpc.Core.StatusCode.ResourceExhausted"/>,
            <see cref="F:Grpc.Core.StatusCode.Unavailable"/>, <see cref="F:Grpc.Core.StatusCode.Internal"/>,
            <see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/>.
            </description>
            </item>
            <item><description>Timeout: 60 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreSettings.BatchGetDocumentsSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreClient.BatchGetDocuments</c> and <c>FirestoreClient.BatchGetDocumentsAsync</c>.
            </summary>
            <remarks>Timeout: 300 seconds.</remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreSettings.BeginTransactionSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreClient.BeginTransaction</c> and <c>FirestoreClient.BeginTransactionAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds.</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds.</description></item>
            <item><description>Maximum attempts: 5</description></item>
            <item>
            <description>
            Retriable status codes: <see cref="F:Grpc.Core.StatusCode.ResourceExhausted"/>,
            <see cref="F:Grpc.Core.StatusCode.Unavailable"/>, <see cref="F:Grpc.Core.StatusCode.Internal"/>,
            <see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/>.
            </description>
            </item>
            <item><description>Timeout: 60 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreSettings.CommitSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to <c>FirestoreClient.Commit</c>
            and <c>FirestoreClient.CommitAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds.</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds.</description></item>
            <item><description>Maximum attempts: 5</description></item>
            <item>
            <description>
            Retriable status codes: <see cref="F:Grpc.Core.StatusCode.ResourceExhausted"/>,
            <see cref="F:Grpc.Core.StatusCode.Unavailable"/>.
            </description>
            </item>
            <item><description>Timeout: 60 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreSettings.RollbackSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to <c>FirestoreClient.Rollback</c>
             and <c>FirestoreClient.RollbackAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds.</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds.</description></item>
            <item><description>Maximum attempts: 5</description></item>
            <item>
            <description>
            Retriable status codes: <see cref="F:Grpc.Core.StatusCode.ResourceExhausted"/>,
            <see cref="F:Grpc.Core.StatusCode.Unavailable"/>, <see cref="F:Grpc.Core.StatusCode.Internal"/>,
            <see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/>.
            </description>
            </item>
            <item><description>Timeout: 60 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreSettings.RunQuerySettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to <c>FirestoreClient.RunQuery</c>
             and <c>FirestoreClient.RunQueryAsync</c>.
            </summary>
            <remarks>Timeout: 300 seconds.</remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreSettings.RunAggregationQuerySettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreClient.RunAggregationQuery</c> and <c>FirestoreClient.RunAggregationQueryAsync</c>.
            </summary>
            <remarks>Timeout: 300 seconds.</remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreSettings.PartitionQuerySettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreClient.PartitionQuery</c> and <c>FirestoreClient.PartitionQueryAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds.</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds.</description></item>
            <item><description>Maximum attempts: 5</description></item>
            <item>
            <description>
            Retriable status codes: <see cref="F:Grpc.Core.StatusCode.ResourceExhausted"/>,
            <see cref="F:Grpc.Core.StatusCode.Unavailable"/>, <see cref="F:Grpc.Core.StatusCode.Internal"/>,
            <see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/>.
            </description>
            </item>
            <item><description>Timeout: 300 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreSettings.WriteSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to <c>FirestoreClient.Write</c>
            and <c>FirestoreClient.WriteAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>This call will not be retried.</description></item>
            <item><description>Timeout: 86400 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreSettings.WriteStreamingSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.BidirectionalStreamingSettings"/> for calls to <c>FirestoreClient.Write</c> and
            <c>FirestoreClient.WriteAsync</c>.
            </summary>
            <remarks>The default local send queue size is 100.</remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreSettings.ListenSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to <c>FirestoreClient.Listen</c>
            and <c>FirestoreClient.ListenAsync</c>.
            </summary>
            <remarks>Timeout: 86400 seconds.</remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreSettings.ListenStreamingSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.BidirectionalStreamingSettings"/> for calls to <c>FirestoreClient.Listen</c> and
            <c>FirestoreClient.ListenAsync</c>.
            </summary>
            <remarks>The default local send queue size is 100.</remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreSettings.ListCollectionIdsSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreClient.ListCollectionIds</c> and <c>FirestoreClient.ListCollectionIdsAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds.</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds.</description></item>
            <item><description>Maximum attempts: 5</description></item>
            <item>
            <description>
            Retriable status codes: <see cref="F:Grpc.Core.StatusCode.ResourceExhausted"/>,
            <see cref="F:Grpc.Core.StatusCode.Unavailable"/>, <see cref="F:Grpc.Core.StatusCode.Internal"/>,
            <see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/>.
            </description>
            </item>
            <item><description>Timeout: 60 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreSettings.BatchWriteSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to <c>FirestoreClient.BatchWrite</c>
             and <c>FirestoreClient.BatchWriteAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds.</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds.</description></item>
            <item><description>Maximum attempts: 5</description></item>
            <item>
            <description>
            Retriable status codes: <see cref="F:Grpc.Core.StatusCode.ResourceExhausted"/>,
            <see cref="F:Grpc.Core.StatusCode.Unavailable"/>, <see cref="F:Grpc.Core.StatusCode.Aborted"/>.
            </description>
            </item>
            <item><description>Timeout: 60 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreSettings.CreateDocumentSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>FirestoreClient.CreateDocument</c> and <c>FirestoreClient.CreateDocumentAsync</c>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds.</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds.</description></item>
            <item><description>Maximum attempts: 5</description></item>
            <item>
            <description>
            Retriable status codes: <see cref="F:Grpc.Core.StatusCode.ResourceExhausted"/>,
            <see cref="F:Grpc.Core.StatusCode.Unavailable"/>.
            </description>
            </item>
            <item><description>Timeout: 60 seconds.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreSettings.LocationsSettings">
            <summary>
            The settings to use for the <see cref="T:Google.Cloud.Location.LocationsClient"/> associated with the client.
            </summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreSettings.Clone">
            <summary>Creates a deep clone of this object, with all the same property values.</summary>
            <returns>A deep clone of this <see cref="T:Google.Cloud.Firestore.V1.FirestoreSettings"/> object.</returns>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.FirestoreClientBuilder">
            <summary>
            Builder class for <see cref="T:Google.Cloud.Firestore.V1.FirestoreClient"/> to provide simple configuration of credentials, endpoint etc.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreClientBuilder.Settings">
            <summary>The settings to use for RPCs, or <c>null</c> for the default settings.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientBuilder.#ctor">
            <summary>Creates a new builder with default settings.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientBuilder.Build">
            <summary>Builds the resulting client.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientBuilder.BuildAsync(System.Threading.CancellationToken)">
            <summary>Builds the resulting client asynchronously.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientBuilder.GetChannelPool">
            <summary>Returns the channel pool to use when no other options are specified.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientBuilder.FromOtherBuilder``1(Google.Api.Gax.Grpc.ClientBuilderBase{``0})">
            <summary>
            Creates a <see cref="T:Google.Cloud.Firestore.V1.FirestoreClientBuilder"/> by copying common settings from another builder.
            This method is intended for use in Google.Cloud.Firestore with FirestoreDbBuilder. It will
            work in other scenarios, but is usually not necessary.
            </summary>
            <typeparam name="T">The client type of the builder.</typeparam>
            <param name="builder">The builder to copy settings from. Must not be null.</param>
            <returns>A FirestoreClientBuilder with common settings from <paramref name="builder"/>.</returns>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.FirestoreClient">
            <summary>Firestore client wrapper, for convenient use.</summary>
            <remarks>
            The Cloud Firestore service.
            
            Cloud Firestore is a fast, fully managed, serverless, cloud-native NoSQL
            document database that simplifies storing, syncing, and querying data for
            your mobile, web, and IoT apps at global scale. Its client libraries provide
            live synchronization and offline support, while its security features and
            integrations with Firebase and Google Cloud Platform accelerate building
            truly serverless apps.
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreClient.DefaultEndpoint">
            <summary>
            The default endpoint for the Firestore service, which is a host of "firestore.googleapis.com" and a port of
            443.
            </summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreClient.DefaultScopes">
            <summary>The default Firestore scopes.</summary>
            <remarks>
            The default Firestore scopes are:
            <list type="bullet">
            <item><description>https://www.googleapis.com/auth/cloud-platform</description></item>
            <item><description>https://www.googleapis.com/auth/datastore</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreClient.ServiceMetadata">
            <summary>The service metadata associated with this client type.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.CreateAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a <see cref="T:Google.Cloud.Firestore.V1.FirestoreClient"/> using the default credentials, endpoint and settings.
            To specify custom credentials or other settings, use <see cref="T:Google.Cloud.Firestore.V1.FirestoreClientBuilder"/>.
            </summary>
            <param name="cancellationToken">
            The <see cref="T:System.Threading.CancellationToken"/> to use while creating the client.
            </param>
            <returns>The task representing the created <see cref="T:Google.Cloud.Firestore.V1.FirestoreClient"/>.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.Create">
            <summary>
            Synchronously creates a <see cref="T:Google.Cloud.Firestore.V1.FirestoreClient"/> using the default credentials, endpoint and settings. 
            To specify custom credentials or other settings, use <see cref="T:Google.Cloud.Firestore.V1.FirestoreClientBuilder"/>.
            </summary>
            <returns>The created <see cref="T:Google.Cloud.Firestore.V1.FirestoreClient"/>.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.Create(Grpc.Core.CallInvoker,Google.Cloud.Firestore.V1.FirestoreSettings,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Creates a <see cref="T:Google.Cloud.Firestore.V1.FirestoreClient"/> which uses the specified call invoker for remote operations.
            </summary>
            <param name="callInvoker">
            The <see cref="T:Grpc.Core.CallInvoker"/> for remote operations. Must not be null.
            </param>
            <param name="settings">Optional <see cref="T:Google.Cloud.Firestore.V1.FirestoreSettings"/>.</param>
            <param name="logger">Optional <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</param>
            <returns>The created <see cref="T:Google.Cloud.Firestore.V1.FirestoreClient"/>.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.ShutdownDefaultChannelsAsync">
            <summary>
            Shuts down any channels automatically created by <see cref="M:Google.Cloud.Firestore.V1.FirestoreClient.Create"/> and
            <see cref="M:Google.Cloud.Firestore.V1.FirestoreClient.CreateAsync(System.Threading.CancellationToken)"/>. Channels which weren't automatically created are not
            affected.
            </summary>
            <remarks>
            After calling this method, further calls to <see cref="M:Google.Cloud.Firestore.V1.FirestoreClient.Create"/> and
            <see cref="M:Google.Cloud.Firestore.V1.FirestoreClient.CreateAsync(System.Threading.CancellationToken)"/> will create new channels, which could in turn be shut down
            by another call to this method.
            </remarks>
            <returns>A task representing the asynchronous shutdown operation.</returns>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreClient.GrpcClient">
            <summary>The underlying gRPC Firestore client</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreClient.LocationsClient">
            <summary>The <see cref="T:Google.Cloud.Location.LocationsClient"/> associated with this client.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.GetDocument(Google.Cloud.Firestore.V1.GetDocumentRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets a single document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.GetDocumentAsync(Google.Cloud.Firestore.V1.GetDocumentRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets a single document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.GetDocumentAsync(Google.Cloud.Firestore.V1.GetDocumentRequest,System.Threading.CancellationToken)">
            <summary>
            Gets a single document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.ListDocuments(Google.Cloud.Firestore.V1.ListDocumentsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists documents.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.Firestore.V1.Document"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.ListDocumentsAsync(Google.Cloud.Firestore.V1.ListDocumentsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists documents.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.Firestore.V1.Document"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.UpdateDocument(Google.Cloud.Firestore.V1.UpdateDocumentRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates or inserts a document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.UpdateDocumentAsync(Google.Cloud.Firestore.V1.UpdateDocumentRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates or inserts a document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.UpdateDocumentAsync(Google.Cloud.Firestore.V1.UpdateDocumentRequest,System.Threading.CancellationToken)">
            <summary>
            Updates or inserts a document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.UpdateDocument(Google.Cloud.Firestore.V1.Document,Google.Cloud.Firestore.V1.DocumentMask,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates or inserts a document.
            </summary>
            <param name="document">
            Required. The updated document.
            Creates the document if it does not already exist.
            </param>
            <param name="updateMask">
            The fields to update.
            None of the field paths in the mask may contain a reserved name.
            
            If the document exists on the server and has fields not referenced in the
            mask, they are left unchanged.
            Fields referenced in the mask, but not present in the input document, are
            deleted from the document on the server.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.UpdateDocumentAsync(Google.Cloud.Firestore.V1.Document,Google.Cloud.Firestore.V1.DocumentMask,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates or inserts a document.
            </summary>
            <param name="document">
            Required. The updated document.
            Creates the document if it does not already exist.
            </param>
            <param name="updateMask">
            The fields to update.
            None of the field paths in the mask may contain a reserved name.
            
            If the document exists on the server and has fields not referenced in the
            mask, they are left unchanged.
            Fields referenced in the mask, but not present in the input document, are
            deleted from the document on the server.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.UpdateDocumentAsync(Google.Cloud.Firestore.V1.Document,Google.Cloud.Firestore.V1.DocumentMask,System.Threading.CancellationToken)">
            <summary>
            Updates or inserts a document.
            </summary>
            <param name="document">
            Required. The updated document.
            Creates the document if it does not already exist.
            </param>
            <param name="updateMask">
            The fields to update.
            None of the field paths in the mask may contain a reserved name.
            
            If the document exists on the server and has fields not referenced in the
            mask, they are left unchanged.
            Fields referenced in the mask, but not present in the input document, are
            deleted from the document on the server.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.DeleteDocument(Google.Cloud.Firestore.V1.DeleteDocumentRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.DeleteDocumentAsync(Google.Cloud.Firestore.V1.DeleteDocumentRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.DeleteDocumentAsync(Google.Cloud.Firestore.V1.DeleteDocumentRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.DeleteDocument(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a document.
            </summary>
            <param name="name">
            Required. The resource name of the Document to delete. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.DeleteDocumentAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a document.
            </summary>
            <param name="name">
            Required. The resource name of the Document to delete. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.DeleteDocumentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a document.
            </summary>
            <param name="name">
            Required. The resource name of the Document to delete. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.FirestoreClient.BatchGetDocumentsStream">
            <summary>
            Server streaming methods for <see cref="M:Google.Cloud.Firestore.V1.FirestoreClient.BatchGetDocuments(Google.Cloud.Firestore.V1.BatchGetDocumentsRequest,Google.Api.Gax.Grpc.CallSettings)"/>
            .
            </summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.BatchGetDocuments(Google.Cloud.Firestore.V1.BatchGetDocumentsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets multiple documents.
            
            Documents returned by this method are not guaranteed to be returned in the
            same order that they were requested.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The server stream.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.BeginTransaction(Google.Cloud.Firestore.V1.BeginTransactionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Starts a new transaction.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.BeginTransactionAsync(Google.Cloud.Firestore.V1.BeginTransactionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Starts a new transaction.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.BeginTransactionAsync(Google.Cloud.Firestore.V1.BeginTransactionRequest,System.Threading.CancellationToken)">
            <summary>
            Starts a new transaction.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.BeginTransaction(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Starts a new transaction.
            </summary>
            <param name="database">
            Required. The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.BeginTransactionAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Starts a new transaction.
            </summary>
            <param name="database">
            Required. The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.BeginTransactionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Starts a new transaction.
            </summary>
            <param name="database">
            Required. The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.Commit(Google.Cloud.Firestore.V1.CommitRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Commits a transaction, while optionally updating documents.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.CommitAsync(Google.Cloud.Firestore.V1.CommitRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Commits a transaction, while optionally updating documents.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.CommitAsync(Google.Cloud.Firestore.V1.CommitRequest,System.Threading.CancellationToken)">
            <summary>
            Commits a transaction, while optionally updating documents.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.Commit(System.String,System.Collections.Generic.IEnumerable{Google.Cloud.Firestore.V1.Write},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Commits a transaction, while optionally updating documents.
            </summary>
            <param name="database">
            Required. The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="writes">
            The writes to apply.
            
            Always executed atomically and in order.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.CommitAsync(System.String,System.Collections.Generic.IEnumerable{Google.Cloud.Firestore.V1.Write},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Commits a transaction, while optionally updating documents.
            </summary>
            <param name="database">
            Required. The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="writes">
            The writes to apply.
            
            Always executed atomically and in order.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.CommitAsync(System.String,System.Collections.Generic.IEnumerable{Google.Cloud.Firestore.V1.Write},System.Threading.CancellationToken)">
            <summary>
            Commits a transaction, while optionally updating documents.
            </summary>
            <param name="database">
            Required. The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="writes">
            The writes to apply.
            
            Always executed atomically and in order.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.Rollback(Google.Cloud.Firestore.V1.RollbackRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Rolls back a transaction.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.RollbackAsync(Google.Cloud.Firestore.V1.RollbackRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Rolls back a transaction.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.RollbackAsync(Google.Cloud.Firestore.V1.RollbackRequest,System.Threading.CancellationToken)">
            <summary>
            Rolls back a transaction.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.Rollback(System.String,Google.Protobuf.ByteString,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Rolls back a transaction.
            </summary>
            <param name="database">
            Required. The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="transaction">
            Required. The transaction to roll back.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.RollbackAsync(System.String,Google.Protobuf.ByteString,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Rolls back a transaction.
            </summary>
            <param name="database">
            Required. The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="transaction">
            Required. The transaction to roll back.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.RollbackAsync(System.String,Google.Protobuf.ByteString,System.Threading.CancellationToken)">
            <summary>
            Rolls back a transaction.
            </summary>
            <param name="database">
            Required. The database name. In the format:
            `projects/{project_id}/databases/{database_id}`.
            </param>
            <param name="transaction">
            Required. The transaction to roll back.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.FirestoreClient.RunQueryStream">
            <summary>
            Server streaming methods for <see cref="M:Google.Cloud.Firestore.V1.FirestoreClient.RunQuery(Google.Cloud.Firestore.V1.RunQueryRequest,Google.Api.Gax.Grpc.CallSettings)"/>.
            </summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.RunQuery(Google.Cloud.Firestore.V1.RunQueryRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Runs a query.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The server stream.</returns>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.FirestoreClient.RunAggregationQueryStream">
            <summary>
            Server streaming methods for
            <see cref="M:Google.Cloud.Firestore.V1.FirestoreClient.RunAggregationQuery(Google.Cloud.Firestore.V1.RunAggregationQueryRequest,Google.Api.Gax.Grpc.CallSettings)"/>.
            </summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.RunAggregationQuery(Google.Cloud.Firestore.V1.RunAggregationQueryRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Runs an aggregation query.
            
            Rather than producing [Document][google.firestore.v1.Document] results like
            [Firestore.RunQuery][google.firestore.v1.Firestore.RunQuery], this API
            allows running an aggregation to produce a series of
            [AggregationResult][google.firestore.v1.AggregationResult] server-side.
            
            High-Level Example:
            
            ```
            -- Return the number of documents in table given a filter.
            SELECT COUNT(*) FROM ( SELECT * FROM k where a = true );
            ```
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The server stream.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.PartitionQuery(Google.Cloud.Firestore.V1.PartitionQueryRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Partitions a query by returning partition cursors that can be used to run
            the query in parallel. The returned partition cursors are split points that
            can be used by RunQuery as starting/end points for the query results.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.Firestore.V1.Cursor"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.PartitionQueryAsync(Google.Cloud.Firestore.V1.PartitionQueryRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Partitions a query by returning partition cursors that can be used to run
            the query in parallel. The returned partition cursors are split points that
            can be used by RunQuery as starting/end points for the query results.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.Firestore.V1.Cursor"/> resources.</returns>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.FirestoreClient.WriteStream">
            <summary>
            Bidirectional streaming methods for
            <see cref="M:Google.Cloud.Firestore.V1.FirestoreClient.Write(Google.Api.Gax.Grpc.CallSettings,Google.Api.Gax.Grpc.BidirectionalStreamingSettings)"/>.
            </summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.Write(Google.Api.Gax.Grpc.CallSettings,Google.Api.Gax.Grpc.BidirectionalStreamingSettings)">
            <summary>
            Streams batches of document updates and deletes, in order. This method is
            only available via gRPC or WebChannel (not REST).
            </summary>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <param name="streamingSettings">If not null, applies streaming overrides to this RPC call.</param>
            <returns>The client-server stream.</returns>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.FirestoreClient.ListenStream">
            <summary>
            Bidirectional streaming methods for
            <see cref="M:Google.Cloud.Firestore.V1.FirestoreClient.Listen(Google.Api.Gax.Grpc.CallSettings,Google.Api.Gax.Grpc.BidirectionalStreamingSettings)"/>.
            </summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.Listen(Google.Api.Gax.Grpc.CallSettings,Google.Api.Gax.Grpc.BidirectionalStreamingSettings)">
            <summary>
            Listens to changes. This method is only available via gRPC or WebChannel
            (not REST).
            </summary>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <param name="streamingSettings">If not null, applies streaming overrides to this RPC call.</param>
            <returns>The client-server stream.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.ListCollectionIds(Google.Cloud.Firestore.V1.ListCollectionIdsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists all the collection IDs underneath a document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:System.String"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.ListCollectionIdsAsync(Google.Cloud.Firestore.V1.ListCollectionIdsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists all the collection IDs underneath a document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:System.String"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.ListCollectionIds(System.String,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists all the collection IDs underneath a document.
            </summary>
            <param name="parent">
            Required. The parent document. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
            For example:
            `projects/my-project/databases/my-database/documents/chatrooms/my-chatroom`
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:System.String"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.ListCollectionIdsAsync(System.String,System.String,System.Nullable{System.Int32},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists all the collection IDs underneath a document.
            </summary>
            <param name="parent">
            Required. The parent document. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
            For example:
            `projects/my-project/databases/my-database/documents/chatrooms/my-chatroom`
            </param>
            <param name="pageToken">
            The token returned from the previous request. A value of <c>null</c> or an empty string retrieves the first
            page.
            </param>
            <param name="pageSize">
            The size of page to request. The response will not be larger than this, but may be smaller. A value of
            <c>null</c> or <c>0</c> uses a server-defined page size.
            </param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:System.String"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.BatchWrite(Google.Cloud.Firestore.V1.BatchWriteRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Applies a batch of write operations.
            
            The BatchWrite method does not apply the write operations atomically
            and can apply them out of order. Method does not allow more than one write
            per document. Each write succeeds or fails independently. See the
            [BatchWriteResponse][google.firestore.v1.BatchWriteResponse] for the
            success status of each write.
            
            If you require an atomically applied set of writes, use
            [Commit][google.firestore.v1.Firestore.Commit] instead.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.BatchWriteAsync(Google.Cloud.Firestore.V1.BatchWriteRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Applies a batch of write operations.
            
            The BatchWrite method does not apply the write operations atomically
            and can apply them out of order. Method does not allow more than one write
            per document. Each write succeeds or fails independently. See the
            [BatchWriteResponse][google.firestore.v1.BatchWriteResponse] for the
            success status of each write.
            
            If you require an atomically applied set of writes, use
            [Commit][google.firestore.v1.Firestore.Commit] instead.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.BatchWriteAsync(Google.Cloud.Firestore.V1.BatchWriteRequest,System.Threading.CancellationToken)">
            <summary>
            Applies a batch of write operations.
            
            The BatchWrite method does not apply the write operations atomically
            and can apply them out of order. Method does not allow more than one write
            per document. Each write succeeds or fails independently. See the
            [BatchWriteResponse][google.firestore.v1.BatchWriteResponse] for the
            success status of each write.
            
            If you require an atomically applied set of writes, use
            [Commit][google.firestore.v1.Firestore.Commit] instead.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.CreateDocument(Google.Cloud.Firestore.V1.CreateDocumentRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a new document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.CreateDocumentAsync(Google.Cloud.Firestore.V1.CreateDocumentRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a new document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClient.CreateDocumentAsync(Google.Cloud.Firestore.V1.CreateDocumentRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreClient.Settings">
            <summary>
            Returns the effective <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> used for each API call.
            This can be used to create a modified instance of <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> to pass
            for a single API request.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.FirestoreClientImpl">
            <summary>Firestore client wrapper implementation, for convenient use.</summary>
            <remarks>
            The Cloud Firestore service.
            
            Cloud Firestore is a fast, fully managed, serverless, cloud-native NoSQL
            document database that simplifies storing, syncing, and querying data for
            your mobile, web, and IoT apps at global scale. Its client libraries provide
            live synchronization and offline support, while its security features and
            integrations with Firebase and Google Cloud Platform accelerate building
            truly serverless apps.
            </remarks>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.#ctor(Google.Cloud.Firestore.V1.Firestore.FirestoreClient,Google.Cloud.Firestore.V1.FirestoreSettings,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Constructs a client wrapper for the Firestore service, with the specified gRPC client and settings.
            </summary>
            <param name="grpcClient">The underlying gRPC client.</param>
            <param name="settings">The base <see cref="T:Google.Cloud.Firestore.V1.FirestoreSettings"/> used within this client.</param>
            <param name="logger">Optional <see cref="T:Microsoft.Extensions.Logging.ILogger"/> to use within this client.</param>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreClientImpl.GrpcClient">
            <summary>The underlying gRPC Firestore client</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.FirestoreClientImpl.LocationsClient">
            <summary>The <see cref="T:Google.Cloud.Location.LocationsClient"/> associated with this client.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.GetDocument(Google.Cloud.Firestore.V1.GetDocumentRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets a single document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.GetDocumentAsync(Google.Cloud.Firestore.V1.GetDocumentRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets a single document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.ListDocuments(Google.Cloud.Firestore.V1.ListDocumentsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists documents.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.Firestore.V1.Document"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.ListDocumentsAsync(Google.Cloud.Firestore.V1.ListDocumentsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists documents.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.Firestore.V1.Document"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.UpdateDocument(Google.Cloud.Firestore.V1.UpdateDocumentRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates or inserts a document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.UpdateDocumentAsync(Google.Cloud.Firestore.V1.UpdateDocumentRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates or inserts a document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.DeleteDocument(Google.Cloud.Firestore.V1.DeleteDocumentRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.DeleteDocumentAsync(Google.Cloud.Firestore.V1.DeleteDocumentRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.BatchGetDocumentsStreamImpl.#ctor(Grpc.Core.AsyncServerStreamingCall{Google.Cloud.Firestore.V1.BatchGetDocumentsResponse})">
            <summary>Construct the server streaming method for <c>BatchGetDocuments</c>.</summary>
            <param name="call">The underlying gRPC server streaming call.</param>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.BatchGetDocuments(Google.Cloud.Firestore.V1.BatchGetDocumentsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Gets multiple documents.
            
            Documents returned by this method are not guaranteed to be returned in the
            same order that they were requested.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The server stream.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.BeginTransaction(Google.Cloud.Firestore.V1.BeginTransactionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Starts a new transaction.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.BeginTransactionAsync(Google.Cloud.Firestore.V1.BeginTransactionRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Starts a new transaction.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.Commit(Google.Cloud.Firestore.V1.CommitRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Commits a transaction, while optionally updating documents.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.CommitAsync(Google.Cloud.Firestore.V1.CommitRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Commits a transaction, while optionally updating documents.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.Rollback(Google.Cloud.Firestore.V1.RollbackRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Rolls back a transaction.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.RollbackAsync(Google.Cloud.Firestore.V1.RollbackRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Rolls back a transaction.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.RunQueryStreamImpl.#ctor(Grpc.Core.AsyncServerStreamingCall{Google.Cloud.Firestore.V1.RunQueryResponse})">
            <summary>Construct the server streaming method for <c>RunQuery</c>.</summary>
            <param name="call">The underlying gRPC server streaming call.</param>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.RunQuery(Google.Cloud.Firestore.V1.RunQueryRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Runs a query.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The server stream.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.RunAggregationQueryStreamImpl.#ctor(Grpc.Core.AsyncServerStreamingCall{Google.Cloud.Firestore.V1.RunAggregationQueryResponse})">
            <summary>Construct the server streaming method for <c>RunAggregationQuery</c>.</summary>
            <param name="call">The underlying gRPC server streaming call.</param>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.RunAggregationQuery(Google.Cloud.Firestore.V1.RunAggregationQueryRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Runs an aggregation query.
            
            Rather than producing [Document][google.firestore.v1.Document] results like
            [Firestore.RunQuery][google.firestore.v1.Firestore.RunQuery], this API
            allows running an aggregation to produce a series of
            [AggregationResult][google.firestore.v1.AggregationResult] server-side.
            
            High-Level Example:
            
            ```
            -- Return the number of documents in table given a filter.
            SELECT COUNT(*) FROM ( SELECT * FROM k where a = true );
            ```
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The server stream.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.PartitionQuery(Google.Cloud.Firestore.V1.PartitionQueryRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Partitions a query by returning partition cursors that can be used to run
            the query in parallel. The returned partition cursors are split points that
            can be used by RunQuery as starting/end points for the query results.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:Google.Cloud.Firestore.V1.Cursor"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.PartitionQueryAsync(Google.Cloud.Firestore.V1.PartitionQueryRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Partitions a query by returning partition cursors that can be used to run
            the query in parallel. The returned partition cursors are split points that
            can be used by RunQuery as starting/end points for the query results.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:Google.Cloud.Firestore.V1.Cursor"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.WriteStreamImpl.#ctor(Google.Cloud.Firestore.V1.FirestoreClientImpl,Grpc.Core.AsyncDuplexStreamingCall{Google.Cloud.Firestore.V1.WriteRequest,Google.Cloud.Firestore.V1.WriteResponse},Google.Api.Gax.Grpc.BufferedClientStreamWriter{Google.Cloud.Firestore.V1.WriteRequest})">
            <summary>Construct the bidirectional streaming method for <c>Write</c>.</summary>
            <param name="service">The service containing this streaming method.</param>
            <param name="call">The underlying gRPC duplex streaming call.</param>
            <param name="writeBuffer">
            The <see cref="T:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1"/> instance associated with this
            streaming call.
            </param>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.Write(Google.Api.Gax.Grpc.CallSettings,Google.Api.Gax.Grpc.BidirectionalStreamingSettings)">
            <summary>
            Streams batches of document updates and deletes, in order. This method is
            only available via gRPC or WebChannel (not REST).
            </summary>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <param name="streamingSettings">If not null, applies streaming overrides to this RPC call.</param>
            <returns>The client-server stream.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.ListenStreamImpl.#ctor(Google.Cloud.Firestore.V1.FirestoreClientImpl,Grpc.Core.AsyncDuplexStreamingCall{Google.Cloud.Firestore.V1.ListenRequest,Google.Cloud.Firestore.V1.ListenResponse},Google.Api.Gax.Grpc.BufferedClientStreamWriter{Google.Cloud.Firestore.V1.ListenRequest})">
            <summary>Construct the bidirectional streaming method for <c>Listen</c>.</summary>
            <param name="service">The service containing this streaming method.</param>
            <param name="call">The underlying gRPC duplex streaming call.</param>
            <param name="writeBuffer">
            The <see cref="T:Google.Api.Gax.Grpc.BufferedClientStreamWriter`1"/> instance associated with this
            streaming call.
            </param>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.Listen(Google.Api.Gax.Grpc.CallSettings,Google.Api.Gax.Grpc.BidirectionalStreamingSettings)">
            <summary>
            Listens to changes. This method is only available via gRPC or WebChannel
            (not REST).
            </summary>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <param name="streamingSettings">If not null, applies streaming overrides to this RPC call.</param>
            <returns>The client-server stream.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.ListCollectionIds(Google.Cloud.Firestore.V1.ListCollectionIdsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists all the collection IDs underneath a document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable sequence of <see cref="T:System.String"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.ListCollectionIdsAsync(Google.Cloud.Firestore.V1.ListCollectionIdsRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lists all the collection IDs underneath a document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A pageable asynchronous sequence of <see cref="T:System.String"/> resources.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.BatchWrite(Google.Cloud.Firestore.V1.BatchWriteRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Applies a batch of write operations.
            
            The BatchWrite method does not apply the write operations atomically
            and can apply them out of order. Method does not allow more than one write
            per document. Each write succeeds or fails independently. See the
            [BatchWriteResponse][google.firestore.v1.BatchWriteResponse] for the
            success status of each write.
            
            If you require an atomically applied set of writes, use
            [Commit][google.firestore.v1.Firestore.Commit] instead.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.BatchWriteAsync(Google.Cloud.Firestore.V1.BatchWriteRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Applies a batch of write operations.
            
            The BatchWrite method does not apply the write operations atomically
            and can apply them out of order. Method does not allow more than one write
            per document. Each write succeeds or fails independently. See the
            [BatchWriteResponse][google.firestore.v1.BatchWriteResponse] for the
            success status of each write.
            
            If you require an atomically applied set of writes, use
            [Commit][google.firestore.v1.Firestore.Commit] instead.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.CreateDocument(Google.Cloud.Firestore.V1.CreateDocumentRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a new document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The RPC response.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.CreateDocumentAsync(Google.Cloud.Firestore.V1.CreateDocumentRequest,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Creates a new document.
            </summary>
            <param name="request">The request object containing all of the parameters for the API call.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A Task containing the RPC response.</returns>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.FirestoreClientImpl.ResourcePrefixHeader">
            <summary>
            The name of the header used for efficiently routing requests.
            </summary>
            <remarks>
            This should be set to the database resource name ("projects/{projectId}/databases/{databaseId}") for any RPC.
            For non-streaming calls, <see cref="T:Google.Cloud.Firestore.V1.FirestoreClientImpl"/> performs this automatically. This cannot be performed
            automatically for streaming calls due to the separation between initializing the stream and sending requests, so
            client code should set the value in a <see cref="T:Google.Api.Gax.Grpc.CallSettings"/>. Typically this is performed with either the
            <see cref="M:Google.Api.Gax.Grpc.CallSettings.FromHeader(System.String,System.String)"/> factory method or the
            <see cref="M:Google.Api.Gax.Grpc.CallSettingsExtensions.WithHeader(Google.Api.Gax.Grpc.CallSettings,System.String,System.String)"/> extension method.
            </remarks>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.FirestoreClientImpl.GetDatabaseResourceName(System.String)">
            <summary>
            Retrieves the database resource name from a full resource name.
            Validation is performed as far as the database ID but no further; the database ID is deemed to end at the first slash.
            </summary>
            <param name="resource">The resource name, which must start with projects/{project_id}/databases/{database_id}</param>
            <returns>The database resource name</returns>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.Firestore">
             <summary>
             The Cloud Firestore service.
            
             Cloud Firestore is a fast, fully managed, serverless, cloud-native NoSQL
             document database that simplifies storing, syncing, and querying data for
             your mobile, web, and IoT apps at global scale. Its client libraries provide
             live synchronization and offline support, while its security features and
             integrations with Firebase and Google Cloud Platform accelerate building
             truly serverless apps.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.Firestore.FirestoreClient">
            <summary>Client for Firestore</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.CreateLocationsClient">
            <summary>
            Creates a new instance of <see cref="T:Google.Cloud.Location.Locations.LocationsClient"/> using the same call invoker as
            this client.
            </summary>
            <returns>
            A new <see cref="T:Google.Cloud.Location.Locations.LocationsClient"/> for the same target as this client.
            </returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.#ctor(Grpc.Core.ChannelBase)">
            <summary>Creates a new client for Firestore</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for Firestore that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.GetDocument(Google.Cloud.Firestore.V1.GetDocumentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets a single document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.GetDocument(Google.Cloud.Firestore.V1.GetDocumentRequest,Grpc.Core.CallOptions)">
            <summary>
            Gets a single document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.GetDocumentAsync(Google.Cloud.Firestore.V1.GetDocumentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Gets a single document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.GetDocumentAsync(Google.Cloud.Firestore.V1.GetDocumentRequest,Grpc.Core.CallOptions)">
            <summary>
            Gets a single document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.ListDocuments(Google.Cloud.Firestore.V1.ListDocumentsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists documents.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.ListDocuments(Google.Cloud.Firestore.V1.ListDocumentsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists documents.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.ListDocumentsAsync(Google.Cloud.Firestore.V1.ListDocumentsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists documents.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.ListDocumentsAsync(Google.Cloud.Firestore.V1.ListDocumentsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists documents.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.UpdateDocument(Google.Cloud.Firestore.V1.UpdateDocumentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Updates or inserts a document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.UpdateDocument(Google.Cloud.Firestore.V1.UpdateDocumentRequest,Grpc.Core.CallOptions)">
            <summary>
            Updates or inserts a document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.UpdateDocumentAsync(Google.Cloud.Firestore.V1.UpdateDocumentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Updates or inserts a document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.UpdateDocumentAsync(Google.Cloud.Firestore.V1.UpdateDocumentRequest,Grpc.Core.CallOptions)">
            <summary>
            Updates or inserts a document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.DeleteDocument(Google.Cloud.Firestore.V1.DeleteDocumentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Deletes a document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.DeleteDocument(Google.Cloud.Firestore.V1.DeleteDocumentRequest,Grpc.Core.CallOptions)">
            <summary>
            Deletes a document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.DeleteDocumentAsync(Google.Cloud.Firestore.V1.DeleteDocumentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Deletes a document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.DeleteDocumentAsync(Google.Cloud.Firestore.V1.DeleteDocumentRequest,Grpc.Core.CallOptions)">
            <summary>
            Deletes a document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.BatchGetDocuments(Google.Cloud.Firestore.V1.BatchGetDocumentsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Gets multiple documents.
            
             Documents returned by this method are not guaranteed to be returned in the
             same order that they were requested.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.BatchGetDocuments(Google.Cloud.Firestore.V1.BatchGetDocumentsRequest,Grpc.Core.CallOptions)">
             <summary>
             Gets multiple documents.
            
             Documents returned by this method are not guaranteed to be returned in the
             same order that they were requested.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.BeginTransaction(Google.Cloud.Firestore.V1.BeginTransactionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Starts a new transaction.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.BeginTransaction(Google.Cloud.Firestore.V1.BeginTransactionRequest,Grpc.Core.CallOptions)">
            <summary>
            Starts a new transaction.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.BeginTransactionAsync(Google.Cloud.Firestore.V1.BeginTransactionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Starts a new transaction.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.BeginTransactionAsync(Google.Cloud.Firestore.V1.BeginTransactionRequest,Grpc.Core.CallOptions)">
            <summary>
            Starts a new transaction.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.Commit(Google.Cloud.Firestore.V1.CommitRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Commits a transaction, while optionally updating documents.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.Commit(Google.Cloud.Firestore.V1.CommitRequest,Grpc.Core.CallOptions)">
            <summary>
            Commits a transaction, while optionally updating documents.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.CommitAsync(Google.Cloud.Firestore.V1.CommitRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Commits a transaction, while optionally updating documents.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.CommitAsync(Google.Cloud.Firestore.V1.CommitRequest,Grpc.Core.CallOptions)">
            <summary>
            Commits a transaction, while optionally updating documents.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.Rollback(Google.Cloud.Firestore.V1.RollbackRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Rolls back a transaction.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.Rollback(Google.Cloud.Firestore.V1.RollbackRequest,Grpc.Core.CallOptions)">
            <summary>
            Rolls back a transaction.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.RollbackAsync(Google.Cloud.Firestore.V1.RollbackRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Rolls back a transaction.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.RollbackAsync(Google.Cloud.Firestore.V1.RollbackRequest,Grpc.Core.CallOptions)">
            <summary>
            Rolls back a transaction.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.RunQuery(Google.Cloud.Firestore.V1.RunQueryRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Runs a query.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.RunQuery(Google.Cloud.Firestore.V1.RunQueryRequest,Grpc.Core.CallOptions)">
            <summary>
            Runs a query.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.RunAggregationQuery(Google.Cloud.Firestore.V1.RunAggregationQueryRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Runs an aggregation query.
            
             Rather than producing [Document][google.firestore.v1.Document] results like
             [Firestore.RunQuery][google.firestore.v1.Firestore.RunQuery], this API
             allows running an aggregation to produce a series of
             [AggregationResult][google.firestore.v1.AggregationResult] server-side.
            
             High-Level Example:
            
             ```
             -- Return the number of documents in table given a filter.
             SELECT COUNT(*) FROM ( SELECT * FROM k where a = true );
             ```
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.RunAggregationQuery(Google.Cloud.Firestore.V1.RunAggregationQueryRequest,Grpc.Core.CallOptions)">
             <summary>
             Runs an aggregation query.
            
             Rather than producing [Document][google.firestore.v1.Document] results like
             [Firestore.RunQuery][google.firestore.v1.Firestore.RunQuery], this API
             allows running an aggregation to produce a series of
             [AggregationResult][google.firestore.v1.AggregationResult] server-side.
            
             High-Level Example:
            
             ```
             -- Return the number of documents in table given a filter.
             SELECT COUNT(*) FROM ( SELECT * FROM k where a = true );
             ```
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.PartitionQuery(Google.Cloud.Firestore.V1.PartitionQueryRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Partitions a query by returning partition cursors that can be used to run
            the query in parallel. The returned partition cursors are split points that
            can be used by RunQuery as starting/end points for the query results.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.PartitionQuery(Google.Cloud.Firestore.V1.PartitionQueryRequest,Grpc.Core.CallOptions)">
            <summary>
            Partitions a query by returning partition cursors that can be used to run
            the query in parallel. The returned partition cursors are split points that
            can be used by RunQuery as starting/end points for the query results.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.PartitionQueryAsync(Google.Cloud.Firestore.V1.PartitionQueryRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Partitions a query by returning partition cursors that can be used to run
            the query in parallel. The returned partition cursors are split points that
            can be used by RunQuery as starting/end points for the query results.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.PartitionQueryAsync(Google.Cloud.Firestore.V1.PartitionQueryRequest,Grpc.Core.CallOptions)">
            <summary>
            Partitions a query by returning partition cursors that can be used to run
            the query in parallel. The returned partition cursors are split points that
            can be used by RunQuery as starting/end points for the query results.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.Write(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Streams batches of document updates and deletes, in order. This method is
            only available via gRPC or WebChannel (not REST).
            </summary>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.Write(Grpc.Core.CallOptions)">
            <summary>
            Streams batches of document updates and deletes, in order. This method is
            only available via gRPC or WebChannel (not REST).
            </summary>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.Listen(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Listens to changes. This method is only available via gRPC or WebChannel
            (not REST).
            </summary>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.Listen(Grpc.Core.CallOptions)">
            <summary>
            Listens to changes. This method is only available via gRPC or WebChannel
            (not REST).
            </summary>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.ListCollectionIds(Google.Cloud.Firestore.V1.ListCollectionIdsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists all the collection IDs underneath a document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.ListCollectionIds(Google.Cloud.Firestore.V1.ListCollectionIdsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists all the collection IDs underneath a document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.ListCollectionIdsAsync(Google.Cloud.Firestore.V1.ListCollectionIdsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Lists all the collection IDs underneath a document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.ListCollectionIdsAsync(Google.Cloud.Firestore.V1.ListCollectionIdsRequest,Grpc.Core.CallOptions)">
            <summary>
            Lists all the collection IDs underneath a document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.BatchWrite(Google.Cloud.Firestore.V1.BatchWriteRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Applies a batch of write operations.
            
             The BatchWrite method does not apply the write operations atomically
             and can apply them out of order. Method does not allow more than one write
             per document. Each write succeeds or fails independently. See the
             [BatchWriteResponse][google.firestore.v1.BatchWriteResponse] for the
             success status of each write.
            
             If you require an atomically applied set of writes, use
             [Commit][google.firestore.v1.Firestore.Commit] instead.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.BatchWrite(Google.Cloud.Firestore.V1.BatchWriteRequest,Grpc.Core.CallOptions)">
             <summary>
             Applies a batch of write operations.
            
             The BatchWrite method does not apply the write operations atomically
             and can apply them out of order. Method does not allow more than one write
             per document. Each write succeeds or fails independently. See the
             [BatchWriteResponse][google.firestore.v1.BatchWriteResponse] for the
             success status of each write.
            
             If you require an atomically applied set of writes, use
             [Commit][google.firestore.v1.Firestore.Commit] instead.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.BatchWriteAsync(Google.Cloud.Firestore.V1.BatchWriteRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
             <summary>
             Applies a batch of write operations.
            
             The BatchWrite method does not apply the write operations atomically
             and can apply them out of order. Method does not allow more than one write
             per document. Each write succeeds or fails independently. See the
             [BatchWriteResponse][google.firestore.v1.BatchWriteResponse] for the
             success status of each write.
            
             If you require an atomically applied set of writes, use
             [Commit][google.firestore.v1.Firestore.Commit] instead.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
             <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
             <param name="cancellationToken">An optional token for canceling the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.BatchWriteAsync(Google.Cloud.Firestore.V1.BatchWriteRequest,Grpc.Core.CallOptions)">
             <summary>
             Applies a batch of write operations.
            
             The BatchWrite method does not apply the write operations atomically
             and can apply them out of order. Method does not allow more than one write
             per document. Each write succeeds or fails independently. See the
             [BatchWriteResponse][google.firestore.v1.BatchWriteResponse] for the
             success status of each write.
            
             If you require an atomically applied set of writes, use
             [Commit][google.firestore.v1.Firestore.Commit] instead.
             </summary>
             <param name="request">The request to send to the server.</param>
             <param name="options">The options for the call.</param>
             <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.CreateDocument(Google.Cloud.Firestore.V1.CreateDocumentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Creates a new document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.CreateDocument(Google.Cloud.Firestore.V1.CreateDocumentRequest,Grpc.Core.CallOptions)">
            <summary>
            Creates a new document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The response received from the server.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.CreateDocumentAsync(Google.Cloud.Firestore.V1.CreateDocumentRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Creates a new document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.CreateDocumentAsync(Google.Cloud.Firestore.V1.CreateDocumentRequest,Grpc.Core.CallOptions)">
            <summary>
            Creates a new document.
            </summary>
            <param name="request">The request to send to the server.</param>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Firestore.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.Firestore.FirestoreBase">
            <summary>Base class for server-side implementations of Firestore</summary>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreBase.GetDocument(Google.Cloud.Firestore.V1.GetDocumentRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Gets a single document.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreBase.ListDocuments(Google.Cloud.Firestore.V1.ListDocumentsRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Lists documents.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreBase.UpdateDocument(Google.Cloud.Firestore.V1.UpdateDocumentRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Updates or inserts a document.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreBase.DeleteDocument(Google.Cloud.Firestore.V1.DeleteDocumentRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Deletes a document.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreBase.BatchGetDocuments(Google.Cloud.Firestore.V1.BatchGetDocumentsRequest,Grpc.Core.IServerStreamWriter{Google.Cloud.Firestore.V1.BatchGetDocumentsResponse},Grpc.Core.ServerCallContext)">
             <summary>
             Gets multiple documents.
            
             Documents returned by this method are not guaranteed to be returned in the
             same order that they were requested.
             </summary>
             <param name="request">The request received from the client.</param>
             <param name="responseStream">Used for sending responses back to the client.</param>
             <param name="context">The context of the server-side call handler being invoked.</param>
             <returns>A task indicating completion of the handler.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreBase.BeginTransaction(Google.Cloud.Firestore.V1.BeginTransactionRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Starts a new transaction.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreBase.Commit(Google.Cloud.Firestore.V1.CommitRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Commits a transaction, while optionally updating documents.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreBase.Rollback(Google.Cloud.Firestore.V1.RollbackRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Rolls back a transaction.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreBase.RunQuery(Google.Cloud.Firestore.V1.RunQueryRequest,Grpc.Core.IServerStreamWriter{Google.Cloud.Firestore.V1.RunQueryResponse},Grpc.Core.ServerCallContext)">
            <summary>
            Runs a query.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="responseStream">Used for sending responses back to the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>A task indicating completion of the handler.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreBase.RunAggregationQuery(Google.Cloud.Firestore.V1.RunAggregationQueryRequest,Grpc.Core.IServerStreamWriter{Google.Cloud.Firestore.V1.RunAggregationQueryResponse},Grpc.Core.ServerCallContext)">
             <summary>
             Runs an aggregation query.
            
             Rather than producing [Document][google.firestore.v1.Document] results like
             [Firestore.RunQuery][google.firestore.v1.Firestore.RunQuery], this API
             allows running an aggregation to produce a series of
             [AggregationResult][google.firestore.v1.AggregationResult] server-side.
            
             High-Level Example:
            
             ```
             -- Return the number of documents in table given a filter.
             SELECT COUNT(*) FROM ( SELECT * FROM k where a = true );
             ```
             </summary>
             <param name="request">The request received from the client.</param>
             <param name="responseStream">Used for sending responses back to the client.</param>
             <param name="context">The context of the server-side call handler being invoked.</param>
             <returns>A task indicating completion of the handler.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreBase.PartitionQuery(Google.Cloud.Firestore.V1.PartitionQueryRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Partitions a query by returning partition cursors that can be used to run
            the query in parallel. The returned partition cursors are split points that
            can be used by RunQuery as starting/end points for the query results.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreBase.Write(Grpc.Core.IAsyncStreamReader{Google.Cloud.Firestore.V1.WriteRequest},Grpc.Core.IServerStreamWriter{Google.Cloud.Firestore.V1.WriteResponse},Grpc.Core.ServerCallContext)">
            <summary>
            Streams batches of document updates and deletes, in order. This method is
            only available via gRPC or WebChannel (not REST).
            </summary>
            <param name="requestStream">Used for reading requests from the client.</param>
            <param name="responseStream">Used for sending responses back to the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>A task indicating completion of the handler.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreBase.Listen(Grpc.Core.IAsyncStreamReader{Google.Cloud.Firestore.V1.ListenRequest},Grpc.Core.IServerStreamWriter{Google.Cloud.Firestore.V1.ListenResponse},Grpc.Core.ServerCallContext)">
            <summary>
            Listens to changes. This method is only available via gRPC or WebChannel
            (not REST).
            </summary>
            <param name="requestStream">Used for reading requests from the client.</param>
            <param name="responseStream">Used for sending responses back to the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>A task indicating completion of the handler.</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreBase.ListCollectionIds(Google.Cloud.Firestore.V1.ListCollectionIdsRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Lists all the collection IDs underneath a document.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreBase.BatchWrite(Google.Cloud.Firestore.V1.BatchWriteRequest,Grpc.Core.ServerCallContext)">
             <summary>
             Applies a batch of write operations.
            
             The BatchWrite method does not apply the write operations atomically
             and can apply them out of order. Method does not allow more than one write
             per document. Each write succeeds or fails independently. See the
             [BatchWriteResponse][google.firestore.v1.BatchWriteResponse] for the
             success status of each write.
            
             If you require an atomically applied set of writes, use
             [Commit][google.firestore.v1.Firestore.Commit] instead.
             </summary>
             <param name="request">The request received from the client.</param>
             <param name="context">The context of the server-side call handler being invoked.</param>
             <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.FirestoreBase.CreateDocument(Google.Cloud.Firestore.V1.CreateDocumentRequest,Grpc.Core.ServerCallContext)">
            <summary>
            Creates a new document.
            </summary>
            <param name="request">The request received from the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>The response to send back to the client (wrapped by a task).</returns>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.BindService(Google.Cloud.Firestore.V1.Firestore.FirestoreBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Google.Cloud.Firestore.V1.Firestore.BindService(Grpc.Core.ServiceBinderBase,Google.Cloud.Firestore.V1.Firestore.FirestoreBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.PackageApiMetadata">
            <summary>Static class to provide common access to package-wide API metadata.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.PackageApiMetadata.ApiMetadata">
            <summary>The <see cref="T:Google.Api.Gax.Grpc.ApiMetadata"/> for services in this package.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.QueryReflection">
            <summary>Holder for reflection information generated from google/firestore/v1/query.proto</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.QueryReflection.Descriptor">
            <summary>File descriptor for google/firestore/v1/query.proto</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredQuery">
            <summary>
            A Firestore query.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.SelectFieldNumber">
            <summary>Field number for the "select" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.Select">
             <summary>
             Optional sub-set of the fields to return.
            
             This acts as a [DocumentMask][google.firestore.v1.DocumentMask] over the
             documents returned from a query. When not set, assumes that the caller
             wants all fields returned.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.FromFieldNumber">
            <summary>Field number for the "from" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.From">
            <summary>
            The collections to query.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.WhereFieldNumber">
            <summary>Field number for the "where" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.Where">
            <summary>
            The filter to apply.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.OrderByFieldNumber">
            <summary>Field number for the "order_by" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.OrderBy">
             <summary>
             The order to apply to the query results.
            
             Firestore allows callers to provide a full ordering, a partial ordering, or
             no ordering at all. In all cases, Firestore guarantees a stable ordering
             through the following rules:
            
              * The `order_by` is required to reference all fields used with an
                inequality filter.
              * All fields that are required to be in the `order_by` but are not already
                present are appended in lexicographical ordering of the field name.
              * If an order on `__name__` is not specified, it is appended by default.
            
             Fields are appended with the same sort direction as the last order
             specified, or 'ASCENDING' if no order was specified. For example:
            
              * `ORDER BY a` becomes `ORDER BY a ASC, __name__ ASC`
              * `ORDER BY a DESC` becomes `ORDER BY a DESC, __name__ DESC`
              * `WHERE a > 1` becomes `WHERE a > 1 ORDER BY a ASC, __name__ ASC`
              * `WHERE __name__ > ... AND a > 1` becomes
                 `WHERE __name__ > ... AND a > 1 ORDER BY a ASC, __name__ ASC`
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.StartAtFieldNumber">
            <summary>Field number for the "start_at" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.StartAt">
             <summary>
             A potential prefix of a position in the result set to start the query at.
            
             The ordering of the result set is based on the `ORDER BY` clause of the
             original query.
            
             ```
             SELECT * FROM k WHERE a = 1 AND b > 2 ORDER BY b ASC, __name__ ASC;
             ```
            
             This query's results are ordered by `(b ASC, __name__ ASC)`.
            
             Cursors can reference either the full ordering or a prefix of the location,
             though it cannot reference more fields than what are in the provided
             `ORDER BY`.
            
             Continuing off the example above, attaching the following start cursors
             will have varying impact:
            
             - `START BEFORE (2, /k/123)`: start the query right before `a = 1 AND
                b > 2 AND __name__ > /k/123`.
             - `START AFTER (10)`: start the query right after `a = 1 AND b > 10`.
            
             Unlike `OFFSET` which requires scanning over the first N results to skip,
             a start cursor allows the query to begin at a logical position. This
             position is not required to match an actual result, it will scan forward
             from this position to find the next document.
            
             Requires:
            
             * The number of values cannot be greater than the number of fields
               specified in the `ORDER BY` clause.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.EndAtFieldNumber">
            <summary>Field number for the "end_at" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.EndAt">
             <summary>
             A potential prefix of a position in the result set to end the query at.
            
             This is similar to `START_AT` but with it controlling the end position
             rather than the start position.
            
             Requires:
            
             * The number of values cannot be greater than the number of fields
               specified in the `ORDER BY` clause.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.OffsetFieldNumber">
            <summary>Field number for the "offset" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.Offset">
             <summary>
             The number of documents to skip before returning the first result.
            
             This applies after the constraints specified by the `WHERE`, `START AT`, &amp;
             `END AT` but before the `LIMIT` clause.
            
             Requires:
            
             * The value must be greater than or equal to zero if specified.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.LimitFieldNumber">
            <summary>Field number for the "limit" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.Limit">
             <summary>
             The maximum number of results to return.
            
             Applies after all other constraints.
            
             Requires:
            
             * The value must be greater than or equal to zero if specified.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredQuery.Types">
            <summary>Container for nested types declared in the StructuredQuery message type.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredQuery.Types.Direction">
            <summary>
            A sort direction.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.Direction.Unspecified">
            <summary>
            Unspecified.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.Direction.Ascending">
            <summary>
            Ascending.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.Direction.Descending">
            <summary>
            Descending.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredQuery.Types.CollectionSelector">
            <summary>
            A selection of a collection, such as `messages as m1`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.CollectionSelector.CollectionIdFieldNumber">
            <summary>Field number for the "collection_id" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.Types.CollectionSelector.CollectionId">
            <summary>
            The collection ID.
            When set, selects only collections with this ID.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.CollectionSelector.AllDescendantsFieldNumber">
            <summary>Field number for the "all_descendants" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.Types.CollectionSelector.AllDescendants">
            <summary>
            When false, selects only collections that are immediate children of
            the `parent` specified in the containing `RunQueryRequest`.
            When true, selects all descendant collections.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredQuery.Types.Filter">
            <summary>
            A filter.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.Filter.CompositeFilterFieldNumber">
            <summary>Field number for the "composite_filter" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.Types.Filter.CompositeFilter">
            <summary>
            A composite filter.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.Filter.FieldFilterFieldNumber">
            <summary>Field number for the "field_filter" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.Types.Filter.FieldFilter">
            <summary>
            A filter on a document field.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.Filter.UnaryFilterFieldNumber">
            <summary>Field number for the "unary_filter" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.Types.Filter.UnaryFilter">
            <summary>
            A filter that takes exactly one argument.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredQuery.Types.Filter.FilterTypeOneofCase">
            <summary>Enum of possible cases for the "filter_type" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredQuery.Types.CompositeFilter">
            <summary>
            A filter that merges multiple other filters using the given operator.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.CompositeFilter.OpFieldNumber">
            <summary>Field number for the "op" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.Types.CompositeFilter.Op">
            <summary>
            The operator for combining multiple filters.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.CompositeFilter.FiltersFieldNumber">
            <summary>Field number for the "filters" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.Types.CompositeFilter.Filters">
             <summary>
             The list of filters to combine.
            
             Requires:
            
             * At least one filter is present.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredQuery.Types.CompositeFilter.Types">
            <summary>Container for nested types declared in the CompositeFilter message type.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredQuery.Types.CompositeFilter.Types.Operator">
            <summary>
            A composite filter operator.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.CompositeFilter.Types.Operator.Unspecified">
            <summary>
            Unspecified. This value must not be used.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.CompositeFilter.Types.Operator.And">
            <summary>
            Documents are required to satisfy all of the combined filters.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.CompositeFilter.Types.Operator.Or">
            <summary>
            Documents are required to satisfy at least one of the combined filters.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldFilter">
            <summary>
            A filter on a specific field.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldFilter.FieldFieldNumber">
            <summary>Field number for the "field" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldFilter.Field">
            <summary>
            The field to filter by.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldFilter.OpFieldNumber">
            <summary>Field number for the "op" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldFilter.Op">
            <summary>
            The operator to filter by.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldFilter.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldFilter.Value">
            <summary>
            The value to compare to.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldFilter.Types">
            <summary>Container for nested types declared in the FieldFilter message type.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldFilter.Types.Operator">
            <summary>
            A field filter operator.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldFilter.Types.Operator.Unspecified">
            <summary>
            Unspecified. This value must not be used.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldFilter.Types.Operator.LessThan">
             <summary>
             The given `field` is less than the given `value`.
            
             Requires:
            
             * That `field` come first in `order_by`.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldFilter.Types.Operator.LessThanOrEqual">
             <summary>
             The given `field` is less than or equal to the given `value`.
            
             Requires:
            
             * That `field` come first in `order_by`.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldFilter.Types.Operator.GreaterThan">
             <summary>
             The given `field` is greater than the given `value`.
            
             Requires:
            
             * That `field` come first in `order_by`.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldFilter.Types.Operator.GreaterThanOrEqual">
             <summary>
             The given `field` is greater than or equal to the given `value`.
            
             Requires:
            
             * That `field` come first in `order_by`.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldFilter.Types.Operator.Equal">
            <summary>
            The given `field` is equal to the given `value`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldFilter.Types.Operator.NotEqual">
             <summary>
             The given `field` is not equal to the given `value`.
            
             Requires:
            
             * No other `NOT_EQUAL`, `NOT_IN`, `IS_NOT_NULL`, or `IS_NOT_NAN`.
             * That `field` comes first in the `order_by`.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldFilter.Types.Operator.ArrayContains">
            <summary>
            The given `field` is an array that contains the given `value`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldFilter.Types.Operator.In">
             <summary>
             The given `field` is equal to at least one value in the given array.
            
             Requires:
            
             * That `value` is a non-empty `ArrayValue`, subject to disjunction
               limits.
             * No `NOT_IN` filters in the same query.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldFilter.Types.Operator.ArrayContainsAny">
             <summary>
             The given `field` is an array that contains any of the values in the
             given array.
            
             Requires:
            
             * That `value` is a non-empty `ArrayValue`, subject to disjunction
               limits.
             * No other `ARRAY_CONTAINS_ANY` filters within the same disjunction.
             * No `NOT_IN` filters in the same query.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldFilter.Types.Operator.NotIn">
             <summary>
             The value of the `field` is not in the given array.
            
             Requires:
            
             * That `value` is a non-empty `ArrayValue` with at most 10 values.
             * No other `OR`, `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`, `NOT_EQUAL`,
               `IS_NOT_NULL`, or `IS_NOT_NAN`.
             * That `field` comes first in the `order_by`.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredQuery.Types.UnaryFilter">
            <summary>
            A filter with a single operand.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.UnaryFilter.OpFieldNumber">
            <summary>Field number for the "op" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.Types.UnaryFilter.Op">
            <summary>
            The unary operator to apply.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.UnaryFilter.FieldFieldNumber">
            <summary>Field number for the "field" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.Types.UnaryFilter.Field">
            <summary>
            The field to which to apply the operator.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredQuery.Types.UnaryFilter.OperandTypeOneofCase">
            <summary>Enum of possible cases for the "operand_type" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredQuery.Types.UnaryFilter.Types">
            <summary>Container for nested types declared in the UnaryFilter message type.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredQuery.Types.UnaryFilter.Types.Operator">
            <summary>
            A unary operator.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.UnaryFilter.Types.Operator.Unspecified">
            <summary>
            Unspecified. This value must not be used.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.UnaryFilter.Types.Operator.IsNan">
            <summary>
            The given `field` is equal to `NaN`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.UnaryFilter.Types.Operator.IsNull">
            <summary>
            The given `field` is equal to `NULL`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.UnaryFilter.Types.Operator.IsNotNan">
             <summary>
             The given `field` is not equal to `NaN`.
            
             Requires:
            
             * No other `NOT_EQUAL`, `NOT_IN`, `IS_NOT_NULL`, or `IS_NOT_NAN`.
             * That `field` comes first in the `order_by`.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.UnaryFilter.Types.Operator.IsNotNull">
             <summary>
             The given `field` is not equal to `NULL`.
            
             Requires:
            
             * A single `NOT_EQUAL`, `NOT_IN`, `IS_NOT_NULL`, or `IS_NOT_NAN`.
             * That `field` comes first in the `order_by`.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredQuery.Types.Order">
            <summary>
            An order on a field.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.Order.FieldFieldNumber">
            <summary>Field number for the "field" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.Types.Order.Field">
            <summary>
            The field to order by.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.Order.DirectionFieldNumber">
            <summary>Field number for the "direction" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.Types.Order.Direction">
            <summary>
            The direction to order by. Defaults to `ASCENDING`.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldReference">
            <summary>
            A reference to a field in a document, ex: `stats.operations`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldReference.FieldPathFieldNumber">
            <summary>Field number for the "field_path" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.Types.FieldReference.FieldPath">
             <summary>
             The relative path of the document being referenced.
            
             Requires:
            
             * Conform to [document field name][google.firestore.v1.Document.fields]
             limitations.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredQuery.Types.Projection">
            <summary>
            The projection of document's fields to return.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredQuery.Types.Projection.FieldsFieldNumber">
            <summary>Field number for the "fields" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredQuery.Types.Projection.Fields">
             <summary>
             The fields to return.
            
             If empty, all fields are returned. To only return the name
             of the document, use `['__name__']`.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredAggregationQuery">
            <summary>
            Firestore query for running an aggregation over a
            [StructuredQuery][google.firestore.v1.StructuredQuery].
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredAggregationQuery.StructuredQueryFieldNumber">
            <summary>Field number for the "structured_query" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredAggregationQuery.StructuredQuery">
            <summary>
            Nested structured query.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredAggregationQuery.AggregationsFieldNumber">
            <summary>Field number for the "aggregations" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredAggregationQuery.Aggregations">
             <summary>
             Optional. Series of aggregations to apply over the results of the
             `structured_query`.
            
             Requires:
            
             * A minimum of one and maximum of five aggregations per query.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredAggregationQuery.QueryTypeOneofCase">
            <summary>Enum of possible cases for the "query_type" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredAggregationQuery.Types">
            <summary>Container for nested types declared in the StructuredAggregationQuery message type.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredAggregationQuery.Types.Aggregation">
            <summary>
            Defines an aggregation that produces a single result.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredAggregationQuery.Types.Aggregation.CountFieldNumber">
            <summary>Field number for the "count" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredAggregationQuery.Types.Aggregation.Count">
            <summary>
            Count aggregator.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredAggregationQuery.Types.Aggregation.AliasFieldNumber">
            <summary>Field number for the "alias" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredAggregationQuery.Types.Aggregation.Alias">
             <summary>
             Optional. Optional name of the field to store the result of the
             aggregation into.
            
             If not provided, Firestore will pick a default name following the format
             `field_&lt;incremental_id++>`. For example:
            
             ```
             AGGREGATE
               COUNT_UP_TO(1) AS count_up_to_1,
               COUNT_UP_TO(2),
               COUNT_UP_TO(3) AS count_up_to_3,
               COUNT(*)
             OVER (
               ...
             );
             ```
            
             becomes:
            
             ```
             AGGREGATE
               COUNT_UP_TO(1) AS count_up_to_1,
               COUNT_UP_TO(2) AS field_1,
               COUNT_UP_TO(3) AS count_up_to_3,
               COUNT(*) AS field_2
             OVER (
               ...
             );
             ```
            
             Requires:
            
             * Must be unique across all aggregation aliases.
             * Conform to [document field name][google.firestore.v1.Document.fields]
             limitations.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredAggregationQuery.Types.Aggregation.OperatorOneofCase">
            <summary>Enum of possible cases for the "operator" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredAggregationQuery.Types.Aggregation.Types">
            <summary>Container for nested types declared in the Aggregation message type.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.StructuredAggregationQuery.Types.Aggregation.Types.Count">
             <summary>
             Count of documents that match the query.
            
             The `COUNT(*)` aggregation function operates on the entire document
             so it does not require a field reference.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.StructuredAggregationQuery.Types.Aggregation.Types.Count.UpToFieldNumber">
            <summary>Field number for the "up_to" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.StructuredAggregationQuery.Types.Aggregation.Types.Count.UpTo">
             <summary>
             Optional. Optional constraint on the maximum number of documents to
             count.
            
             This provides a way to set an upper bound on the number of documents
             to scan, limiting latency, and cost.
            
             Unspecified is interpreted as no bound.
            
             High-Level Example:
            
             ```
             AGGREGATE COUNT_UP_TO(1000) OVER ( SELECT * FROM k );
             ```
            
             Requires:
            
             * Must be greater than zero when present.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.Cursor">
            <summary>
            A position in a query result set.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Cursor.ValuesFieldNumber">
            <summary>Field number for the "values" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Cursor.Values">
             <summary>
             The values that represent a position, in the order they appear in
             the order by clause of a query.
            
             Can contain fewer values than specified in the order by clause.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Cursor.BeforeFieldNumber">
            <summary>Field number for the "before" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Cursor.Before">
            <summary>
            If the position is just before or just after the given values, relative
            to the sort order defined by the query.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.WriteReflection">
            <summary>Holder for reflection information generated from google/firestore/v1/write.proto</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.WriteReflection.Descriptor">
            <summary>File descriptor for google/firestore/v1/write.proto</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.Write">
            <summary>
            A write on a document.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Write.UpdateFieldNumber">
            <summary>Field number for the "update" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Write.Update">
            <summary>
            A document to write.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Write.DeleteFieldNumber">
            <summary>Field number for the "delete" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Write.Delete">
            <summary>
            A document name to delete. In the format:
            `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Write.TransformFieldNumber">
            <summary>Field number for the "transform" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Write.Transform">
            <summary>
            Applies a transformation to a document.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Write.UpdateMaskFieldNumber">
            <summary>Field number for the "update_mask" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Write.UpdateMask">
             <summary>
             The fields to update in this write.
            
             This field can be set only when the operation is `update`.
             If the mask is not set for an `update` and the document exists, any
             existing data will be overwritten.
             If the mask is set and the document on the server has fields not covered by
             the mask, they are left unchanged.
             Fields referenced in the mask, but not present in the input document, are
             deleted from the document on the server.
             The field paths in this mask must not contain a reserved field name.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Write.UpdateTransformsFieldNumber">
            <summary>Field number for the "update_transforms" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Write.UpdateTransforms">
             <summary>
             The transforms to perform after update.
            
             This field can be set only when the operation is `update`. If present, this
             write is equivalent to performing `update` and `transform` to the same
             document atomically and in order.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.Write.CurrentDocumentFieldNumber">
            <summary>Field number for the "current_document" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.Write.CurrentDocument">
             <summary>
             An optional precondition on the document.
            
             The write will fail if this is set and not met by the target document.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.Write.OperationOneofCase">
            <summary>Enum of possible cases for the "operation" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.DocumentTransform">
            <summary>
            A transformation of a document.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentTransform.DocumentFieldNumber">
            <summary>Field number for the "document" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DocumentTransform.Document">
            <summary>
            The name of the document to transform.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentTransform.FieldTransformsFieldNumber">
            <summary>Field number for the "field_transforms" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DocumentTransform.FieldTransforms">
            <summary>
            The list of transformations to apply to the fields of the document, in
            order.
            This must not be empty.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.DocumentTransform.Types">
            <summary>Container for nested types declared in the DocumentTransform message type.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.DocumentTransform.Types.FieldTransform">
            <summary>
            A transformation of a field of the document.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentTransform.Types.FieldTransform.FieldPathFieldNumber">
            <summary>Field number for the "field_path" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DocumentTransform.Types.FieldTransform.FieldPath">
            <summary>
            The path of the field. See
            [Document.fields][google.firestore.v1.Document.fields] for the field path
            syntax reference.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentTransform.Types.FieldTransform.SetToServerValueFieldNumber">
            <summary>Field number for the "set_to_server_value" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DocumentTransform.Types.FieldTransform.SetToServerValue">
            <summary>
            Sets the field to the given server value.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentTransform.Types.FieldTransform.IncrementFieldNumber">
            <summary>Field number for the "increment" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DocumentTransform.Types.FieldTransform.Increment">
             <summary>
             Adds the given value to the field's current value.
            
             This must be an integer or a double value.
             If the field is not an integer or double, or if the field does not yet
             exist, the transformation will set the field to the given value.
             If either of the given value or the current field value are doubles,
             both values will be interpreted as doubles. Double arithmetic and
             representation of double values follow IEEE 754 semantics.
             If there is positive/negative integer overflow, the field is resolved
             to the largest magnitude positive/negative integer.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentTransform.Types.FieldTransform.MaximumFieldNumber">
            <summary>Field number for the "maximum" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DocumentTransform.Types.FieldTransform.Maximum">
             <summary>
             Sets the field to the maximum of its current value and the given value.
            
             This must be an integer or a double value.
             If the field is not an integer or double, or if the field does not yet
             exist, the transformation will set the field to the given value.
             If a maximum operation is applied where the field and the input value
             are of mixed types (that is - one is an integer and one is a double)
             the field takes on the type of the larger operand. If the operands are
             equivalent (e.g. 3 and 3.0), the field does not change.
             0, 0.0, and -0.0 are all zero. The maximum of a zero stored value and
             zero input value is always the stored value.
             The maximum of any numeric value x and NaN is NaN.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentTransform.Types.FieldTransform.MinimumFieldNumber">
            <summary>Field number for the "minimum" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DocumentTransform.Types.FieldTransform.Minimum">
             <summary>
             Sets the field to the minimum of its current value and the given value.
            
             This must be an integer or a double value.
             If the field is not an integer or double, or if the field does not yet
             exist, the transformation will set the field to the input value.
             If a minimum operation is applied where the field and the input value
             are of mixed types (that is - one is an integer and one is a double)
             the field takes on the type of the smaller operand. If the operands are
             equivalent (e.g. 3 and 3.0), the field does not change.
             0, 0.0, and -0.0 are all zero. The minimum of a zero stored value and
             zero input value is always the stored value.
             The minimum of any numeric value x and NaN is NaN.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentTransform.Types.FieldTransform.AppendMissingElementsFieldNumber">
            <summary>Field number for the "append_missing_elements" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DocumentTransform.Types.FieldTransform.AppendMissingElements">
             <summary>
             Append the given elements in order if they are not already present in
             the current field value.
             If the field is not an array, or if the field does not yet exist, it is
             first set to the empty array.
            
             Equivalent numbers of different types (e.g. 3L and 3.0) are
             considered equal when checking if a value is missing.
             NaN is equal to NaN, and Null is equal to Null.
             If the input contains multiple equivalent values, only the first will
             be considered.
            
             The corresponding transform_result will be the null value.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentTransform.Types.FieldTransform.RemoveAllFromArrayFieldNumber">
            <summary>Field number for the "remove_all_from_array" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DocumentTransform.Types.FieldTransform.RemoveAllFromArray">
             <summary>
             Remove all of the given elements from the array in the field.
             If the field is not an array, or if the field does not yet exist, it is
             set to the empty array.
            
             Equivalent numbers of the different types (e.g. 3L and 3.0) are
             considered equal when deciding whether an element should be removed.
             NaN is equal to NaN, and Null is equal to Null.
             This will remove all equivalent values if there are duplicates.
            
             The corresponding transform_result will be the null value.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.DocumentTransform.Types.FieldTransform.TransformTypeOneofCase">
            <summary>Enum of possible cases for the "transform_type" oneof.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.DocumentTransform.Types.FieldTransform.Types">
            <summary>Container for nested types declared in the FieldTransform message type.</summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.DocumentTransform.Types.FieldTransform.Types.ServerValue">
            <summary>
            A value that is calculated by the server.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentTransform.Types.FieldTransform.Types.ServerValue.Unspecified">
            <summary>
            Unspecified. This value must not be used.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentTransform.Types.FieldTransform.Types.ServerValue.RequestTime">
            <summary>
            The time at which the server processed the request, with millisecond
            precision. If used on multiple fields (same or different documents) in
            a transaction, all the fields will get the same server timestamp.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.WriteResult">
            <summary>
            The result of applying a write.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.WriteResult.UpdateTimeFieldNumber">
            <summary>Field number for the "update_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.WriteResult.UpdateTime">
             <summary>
             The last update time of the document after applying the write. Not set
             after a `delete`.
            
             If the write did not actually change the document, this will be the
             previous update_time.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.WriteResult.TransformResultsFieldNumber">
            <summary>Field number for the "transform_results" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.WriteResult.TransformResults">
            <summary>
            The results of applying each
            [DocumentTransform.FieldTransform][google.firestore.v1.DocumentTransform.FieldTransform],
            in the same order.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.DocumentChange">
             <summary>
             A [Document][google.firestore.v1.Document] has changed.
            
             May be the result of multiple [writes][google.firestore.v1.Write], including
             deletes, that ultimately resulted in a new value for the
             [Document][google.firestore.v1.Document].
            
             Multiple [DocumentChange][google.firestore.v1.DocumentChange] messages may be
             returned for the same logical change, if multiple targets are affected.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentChange.DocumentFieldNumber">
            <summary>Field number for the "document" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DocumentChange.Document">
             <summary>
             The new state of the [Document][google.firestore.v1.Document].
            
             If `mask` is set, contains only fields that were updated or added.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentChange.TargetIdsFieldNumber">
            <summary>Field number for the "target_ids" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DocumentChange.TargetIds">
            <summary>
            A set of target IDs of targets that match this document.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentChange.RemovedTargetIdsFieldNumber">
            <summary>Field number for the "removed_target_ids" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DocumentChange.RemovedTargetIds">
            <summary>
            A set of target IDs for targets that no longer match this document.
            </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.DocumentDelete">
             <summary>
             A [Document][google.firestore.v1.Document] has been deleted.
            
             May be the result of multiple [writes][google.firestore.v1.Write], including
             updates, the last of which deleted the
             [Document][google.firestore.v1.Document].
            
             Multiple [DocumentDelete][google.firestore.v1.DocumentDelete] messages may be
             returned for the same logical delete, if multiple targets are affected.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentDelete.DocumentFieldNumber">
            <summary>Field number for the "document" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DocumentDelete.Document">
            <summary>
            The resource name of the [Document][google.firestore.v1.Document] that was
            deleted.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentDelete.RemovedTargetIdsFieldNumber">
            <summary>Field number for the "removed_target_ids" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DocumentDelete.RemovedTargetIds">
            <summary>
            A set of target IDs for targets that previously matched this entity.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentDelete.ReadTimeFieldNumber">
            <summary>Field number for the "read_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DocumentDelete.ReadTime">
             <summary>
             The read timestamp at which the delete was observed.
            
             Greater or equal to the `commit_time` of the delete.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.DocumentRemove">
             <summary>
             A [Document][google.firestore.v1.Document] has been removed from the view of
             the targets.
            
             Sent if the document is no longer relevant to a target and is out of view.
             Can be sent instead of a DocumentDelete or a DocumentChange if the server
             can not send the new value of the document.
            
             Multiple [DocumentRemove][google.firestore.v1.DocumentRemove] messages may be
             returned for the same logical write or delete, if multiple targets are
             affected.
             </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentRemove.DocumentFieldNumber">
            <summary>Field number for the "document" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DocumentRemove.Document">
            <summary>
            The resource name of the [Document][google.firestore.v1.Document] that has
            gone out of view.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentRemove.RemovedTargetIdsFieldNumber">
            <summary>Field number for the "removed_target_ids" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DocumentRemove.RemovedTargetIds">
            <summary>
            A set of target IDs for targets that previously matched this document.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.DocumentRemove.ReadTimeFieldNumber">
            <summary>Field number for the "read_time" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.DocumentRemove.ReadTime">
             <summary>
             The read timestamp at which the remove was observed.
            
             Greater or equal to the `commit_time` of the change/delete/remove.
             </summary>
        </member>
        <member name="T:Google.Cloud.Firestore.V1.ExistenceFilter">
            <summary>
            A digest of all the documents that match a given target.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ExistenceFilter.TargetIdFieldNumber">
            <summary>Field number for the "target_id" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ExistenceFilter.TargetId">
            <summary>
            The target ID to which this filter applies.
            </summary>
        </member>
        <member name="F:Google.Cloud.Firestore.V1.ExistenceFilter.CountFieldNumber">
            <summary>Field number for the "count" field.</summary>
        </member>
        <member name="P:Google.Cloud.Firestore.V1.ExistenceFilter.Count">
             <summary>
             The total count of documents that match
             [target_id][google.firestore.v1.ExistenceFilter.target_id].
            
             If different from the count of documents in the client that match, the
             client must manually determine which documents no longer match the target.
             </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>Static class to provide extension methods to configure API clients.</summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddFirestoreClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Google.Cloud.Firestore.V1.FirestoreClientBuilder})">
            <summary>Adds a singleton <see cref="T:Google.Cloud.Firestore.V1.FirestoreClient"/> to <paramref name="services"/>.</summary>
            <param name="services">
            The service collection to add the client to. The services are used to configure the client when requested.
            </param>
            <param name="action">
            An optional action to invoke on the client builder. This is invoked before services from
            <paramref name="services"/> are used.
            </param>
        </member>
    </members>
</doc>
